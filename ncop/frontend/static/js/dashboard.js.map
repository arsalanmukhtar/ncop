{"mappings":"A,C,K,I,E,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAkB,AAAA,EAAA,SAAuC,A,S,C,E,G,E,E,C,E,C,E,E,E,C,E,G,C,M,A,O,C,M,E,C,I,E,A,C,G,E,K,A,E,K,C,oE,I,E,M,A,K,E,E,C,C,E,A,C,O,I,I,A,K,E,G,Q,E,EAAsB,UAAW,IAAI,CAAC,IAAM,EAAc,S,G,E,Q,S,C,C,C,ECAnH,YAGA,CAAA,EAAA,OAAA,CAAiB,A,E,SAAY,SAAU,CAAM,EAC3C,OAAO,IAAI,QAAQ,SAAU,CAAO,CAAE,CAAM,EAG1C,GAAI,EAAE,CAAC,MAAM,CADS,SAAS,oBAAoB,CAAC,WACrB,IAAI,CAAC,SAAU,CAAM,EAClD,OAAO,EAAO,GAAG,GAAK,CACxB,GAAI,YACF,IAGF,IAAI,EAAc,SAAS,aAAa,CAAC,OACzC,CAAA,EAAY,IAAI,CAAG,EACnB,EAAY,GAAG,CAAG,UAClB,EAAY,EAAE,CAAG,SACjB,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,IAAI,EAAS,SAAS,aAAa,CAAC,SACpC,CAAA,EAAO,KAAK,CAAG,CAAA,EACf,EAAO,IAAI,CAAG,kBACd,EAAO,GAAG,CAAG,EACb,EAAO,OAAO,CAAG,SAAU,CAAC,EAC1B,IAAI,EAAQ,AAAI,UAAU,gDAAgD,MAAM,CAAC,EAAQ,aAAa,MAAM,CAAC,EAAE,OAAO,EACtH,CAAA,EAAO,OAAO,CAAG,EAAO,MAAM,CAAG,KACjC,EAAO,MAAM,GACb,EAAO,EACT,EACA,EAAO,MAAM,CAAG,WACd,EAAO,OAAO,CAAG,EAAO,MAAM,CAAG,KACjC,GACF,EACA,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,EACvD,EACF,E,G,E,Q,S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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/runtime-21535cbd84135416.js","node_modules/@parcel/runtime-js/lib/helpers/browser/js-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/runtime-8a41a284e94aa4a2.js","frontend/src/dashboard.js","frontend/src/local-storage-manager.js","frontend/src/map-controls.js","frontend/src/navigation-panel.js","frontend/src/projection-panel.js","frontend/src/basemap-panel.js","frontend/src/sidebar-menu.js","frontend/src/utility-manager.js","frontend/src/user-control.js"],"sourcesContent":["(() => {\n\nvar $parcel$bundleURL;\nfunction $parcel$resolve(url) {\n  url = parcelRequire.i?.[url] || url;\n  if (!$parcel$bundleURL) {\n    try {\n      throw new Error();\n    } catch (err) {\n      var matches = ('' + err.stack).match(\n        /(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g,\n      );\n      if (matches) {\n        $parcel$bundleURL = matches[0];\n      } else {\n        return $parcel$distDir + url;\n      }\n    }\n  }\n  return new URL($parcel$distDir + url, $parcel$bundleURL).toString();\n}\n\nfunction $parcel$extendImportMap(map) {\n  Object.assign(parcelRequire.i ??= {}, map);\n}\n\n      var $parcel$global = globalThis;\n    var $parcel$distDir = \"./\";\n\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiref877\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiref877\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cCRTO\", function(module, exports) {\n\nmodule.exports = (parcelRequire(\"dNLwc\"))($parcel$resolve(\"ewq3m\")).then(()=>parcelRequire('h3r7n'));\n\n});\nparcelRegister(\"dNLwc\", function(module, exports) {\n\"use strict\";\n\nvar $7lV8K = parcelRequire(\"7lV8K\");\nmodule.exports = $7lV8K(function(bundle) {\n    return new Promise(function(resolve, reject) {\n        // Don't insert the same script twice (e.g. if it was already in the HTML)\n        var existingScripts = document.getElementsByTagName('script');\n        if ([].concat(existingScripts).some(function(script) {\n            return script.src === bundle;\n        })) {\n            resolve();\n            return;\n        }\n        var preloadLink = document.createElement('link');\n        preloadLink.href = bundle;\n        preloadLink.rel = 'preload';\n        preloadLink.as = 'script';\n        document.head.appendChild(preloadLink);\n        var script = document.createElement('script');\n        script.async = true;\n        script.type = 'text/javascript';\n        script.src = bundle;\n        script.onerror = function(e) {\n            var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n            script.onerror = script.onload = null;\n            script.remove();\n            reject(error);\n        };\n        script.onload = function() {\n            script.onerror = script.onload = null;\n            resolve();\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n    });\n});\n\n});\nparcelRegister(\"7lV8K\", function(module, exports) {\n\"use strict\";\nvar $55a6d16921f8ab25$var$cachedBundles = {};\nvar $55a6d16921f8ab25$var$cachedPreloads = {};\nvar $55a6d16921f8ab25$var$cachedPrefetches = {};\nfunction $55a6d16921f8ab25$var$getCache(type) {\n    switch(type){\n        case 'preload':\n            return $55a6d16921f8ab25$var$cachedPreloads;\n        case 'prefetch':\n            return $55a6d16921f8ab25$var$cachedPrefetches;\n        default:\n            return $55a6d16921f8ab25$var$cachedBundles;\n    }\n}\nmodule.exports = function(loader, type) {\n    return function(bundle) {\n        var cache = $55a6d16921f8ab25$var$getCache(type);\n        if (cache[bundle]) return cache[bundle];\n        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {\n            delete cache[bundle];\n            throw e;\n        });\n    };\n};\n\n});\n\n\n\nvar $005ab1293402ec74$exports = {};\n$parcel$extendImportMap({\n    \"ewq3m\": \"map-layers.fa6673b4.js\"\n});\n\n// main.js (New Dashboard Entry Point)\n// --------------------------------------------------------\n// --- START: NCOP Storage Manager Integration (The Fix) ---\n// --------------------------------------------------------\n// 1. Import the NCOPStorageManager class from its source file.\n// NOTE: This assumes you have added 'export default NCOPStorageManager;' to the end of your local-storage-manager.js file.\n// Local Storage Manager for NCOP Application\nclass $116e8acf3ac025b3$var$NCOPStorageManager {\n    constructor(){\n        this.storagePrefix = 'ncop_';\n        this.currentUser = null;\n        this.defaultSettings = {\n            // Map Settings\n            mapStyle: 'streets-v12',\n            mapCenter: [\n                74.3,\n                31.5\n            ],\n            mapZoom: 6,\n            mapBearing: 0,\n            mapPitch: 0,\n            labelsEnabled: true,\n            // UI Settings\n            userPanelVisible: false,\n            basemapPanelVisible: false,\n            // Theme Settings\n            theme: 'default',\n            // User Preferences\n            autoSaveInterval: 30000,\n            notifications: true,\n            // Last Activity\n            lastLogin: null,\n            lastActivity: null,\n            sessionData: {}\n        };\n        this.init();\n    }\n    init() {\n        // Get current user from Django context if available\n        if (window.USER_ID) this.currentUser = window.USER_ID;\n        // Initialize user settings if they don't exist\n        this.initializeUserSettings();\n        // Set up auto-save\n        this.setupAutoSave();\n        console.log(\"\\uD83D\\uDDC4\\uFE0F NCOP Storage Manager initialized for user:\", this.currentUser);\n    }\n    // Generate user-specific storage key\n    getUserKey(key) {\n        if (this.currentUser) return `${this.storagePrefix}user_${this.currentUser}_${key}`;\n        return `${this.storagePrefix}guest_${key}`;\n    }\n    // Initialize user settings with defaults\n    initializeUserSettings() {\n        const settings = this.getAllSettings();\n        if (!settings || Object.keys(settings).length === 0) {\n            this.saveAllSettings(this.defaultSettings);\n            console.log(\"\\uD83D\\uDCDD Initialized default settings for user\");\n        }\n    }\n    // Save individual setting\n    saveSetting(key, value) {\n        try {\n            const storageKey = this.getUserKey(key);\n            localStorage.setItem(storageKey, JSON.stringify({\n                value: value,\n                timestamp: Date.now(),\n                user: this.currentUser\n            }));\n            console.log(`\\u{1F4BE} Saved ${key}:`, value);\n        } catch (error) {\n            console.error(\"\\u274C Error saving to localStorage:\", error);\n        }\n    }\n    // Get individual setting\n    getSetting(key, defaultValue = null) {\n        try {\n            const storageKey = this.getUserKey(key);\n            const stored = localStorage.getItem(storageKey);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                return parsed.value;\n            }\n            // Return default from defaultSettings or provided default\n            return this.defaultSettings[key] !== undefined ? this.defaultSettings[key] : defaultValue;\n        } catch (error) {\n            console.error(\"\\u274C Error reading from localStorage:\", error);\n            return this.defaultSettings[key] !== undefined ? this.defaultSettings[key] : defaultValue;\n        }\n    }\n    // Save all settings at once\n    saveAllSettings(settings) {\n        Object.keys(settings).forEach((key)=>{\n            this.saveSetting(key, settings[key]);\n        });\n    }\n    // Get all settings\n    getAllSettings() {\n        const settings = {};\n        Object.keys(this.defaultSettings).forEach((key)=>{\n            settings[key] = this.getSetting(key);\n        });\n        return settings;\n    }\n    // Map-specific methods\n    saveMapState(mapInstance) {\n        const center = mapInstance.getCenter();\n        const zoom = mapInstance.getZoom();\n        const bearing = mapInstance.getBearing();\n        const pitch = mapInstance.getPitch();\n        this.saveSetting('mapCenter', [\n            center.lng,\n            center.lat\n        ]);\n        this.saveSetting('mapZoom', zoom);\n        this.saveSetting('mapBearing', bearing);\n        this.saveSetting('mapPitch', pitch);\n        console.log(\"\\uD83D\\uDDFA\\uFE0F Map state saved\");\n    }\n    restoreMapState(mapInstance) {\n        const center = this.getSetting('mapCenter');\n        const zoom = this.getSetting('mapZoom');\n        const bearing = this.getSetting('mapBearing');\n        const pitch = this.getSetting('mapPitch');\n        if (center && zoom !== null) {\n            mapInstance.jumpTo({\n                center: center,\n                zoom: zoom,\n                bearing: bearing,\n                pitch: pitch\n            });\n            console.log(\"\\uD83D\\uDDFA\\uFE0F Map state restored\");\n        }\n    }\n    saveMapStyle(style) {\n        this.saveSetting('mapStyle', style);\n    }\n    getMapStyle() {\n        return this.getSetting('mapStyle');\n    }\n    saveLabelsState(enabled) {\n        this.saveSetting('labelsEnabled', enabled);\n    }\n    getLabelsState() {\n        return this.getSetting('labelsEnabled');\n    }\n    // UI State methods\n    saveUserPanelState(visible) {\n        this.saveSetting('userPanelVisible', visible);\n    }\n    getUserPanelState() {\n        return this.getSetting('userPanelVisible');\n    }\n    saveBasemapPanelState(visible) {\n        this.saveSetting('basemapPanelVisible', visible);\n    }\n    getBasemapPanelState() {\n        return this.getSetting('basemapPanelVisible');\n    }\n    // Session management\n    saveSessionData(key, value) {\n        const sessionData = this.getSetting('sessionData', {});\n        sessionData[key] = {\n            value: value,\n            timestamp: Date.now()\n        };\n        this.saveSetting('sessionData', sessionData);\n    }\n    getSessionData(key) {\n        const sessionData = this.getSetting('sessionData', {});\n        return sessionData[key] ? sessionData[key].value : null;\n    }\n    // Activity tracking\n    updateLastActivity() {\n        this.saveSetting('lastActivity', Date.now());\n    }\n    updateLastLogin() {\n        this.saveSetting('lastLogin', Date.now());\n    }\n    getLastActivity() {\n        return this.getSetting('lastActivity');\n    }\n    getLastLogin() {\n        return this.getSetting('lastLogin');\n    }\n    // Auto-save functionality\n    setupAutoSave() {\n        const interval = this.getSetting('autoSaveInterval', 30000);\n        setInterval(()=>{\n            this.updateLastActivity();\n        }, interval);\n        // Save on page unload\n        window.addEventListener('beforeunload', ()=>{\n            this.updateLastActivity();\n        });\n    }\n    // Clear user data\n    clearUserData() {\n        const keys = Object.keys(localStorage);\n        const userPrefix = this.getUserKey('');\n        keys.forEach((key)=>{\n            if (key.startsWith(userPrefix.slice(0, -1))) localStorage.removeItem(key);\n        });\n        console.log(\"\\uD83D\\uDDD1\\uFE0F User data cleared\");\n    }\n    // Export settings for backup\n    exportSettings() {\n        const settings = this.getAllSettings();\n        const exportData = {\n            user: this.currentUser,\n            timestamp: Date.now(),\n            version: '1.0',\n            settings: settings\n        };\n        return JSON.stringify(exportData, null, 2);\n    }\n    // Import settings from backup\n    importSettings(jsonData) {\n        try {\n            const importData = JSON.parse(jsonData);\n            if (importData.settings) {\n                this.saveAllSettings(importData.settings);\n                console.log(\"\\uD83D\\uDCE5 Settings imported successfully\");\n                return true;\n            }\n        } catch (error) {\n            console.error(\"\\u274C Error importing settings:\", error);\n        }\n        return false;\n    }\n    // Get storage usage info\n    getStorageInfo() {\n        const keys = Object.keys(localStorage);\n        const userKeys = keys.filter((key)=>key.startsWith(this.getUserKey('')));\n        let totalSize = 0;\n        userKeys.forEach((key)=>{\n            totalSize += localStorage.getItem(key).length;\n        });\n        return {\n            totalKeys: userKeys.length,\n            totalSize: totalSize,\n            sizeKB: (totalSize / 1024).toFixed(2),\n            maxSize: '5-10MB (browser dependent)',\n            keys: userKeys\n        };\n    }\n    // Check if localStorage is available\n    static isAvailable() {\n        try {\n            const test = '__localStorage_test__';\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\nvar $116e8acf3ac025b3$export$2e2bcd8739ae039 = $116e8acf3ac025b3$var$NCOPStorageManager;\n\n\n// MapControls.js\n/**\r\n * Handles the Mapbox map instance and core map interactions (labels, projection, terrain).\r\n * Assumes mapboxgl and ncop_storage are available globally or managed by the caller.\r\n */ class $93b279f81ac42fb1$export$7628ccdac312035f {\n    #map;\n    #storage;\n    constructor(mapInstance, storageInstance){\n        this.#map = mapInstance;\n        this.#storage = storageInstance;\n    }\n    /**\r\n     * Toggles the visibility of symbol layers, typically used for map labels.\r\n     * @param {boolean} enabled - True to show labels, false to hide.\r\n     */ toggleMapLabels(enabled) {\n        const style = this.#map.getStyle();\n        if (style && style.layers) style.layers.forEach((layer)=>{\n            // Target symbol layers with a text-field property\n            if (layer.type === \"symbol\" && layer.layout && layer.layout[\"text-field\"]) this.#map.setLayoutProperty(layer.id, \"visibility\", enabled ? \"visible\" : \"none\");\n        });\n        console.log(`\\u{1F5FA}\\u{FE0F} Map labels toggled: ${enabled ? \"visible\" : \"none\"}`);\n    }\n    /**\r\n     * Changes the map's projection and saves the preference.\r\n     * @param {string} projectionName - The Mapbox GL JS projection name.\r\n     */ changeMapProjection(projectionName) {\n        try {\n            this.#map.setProjection(projectionName);\n            console.log(`\\u{1F30D} Changed projection to: ${projectionName}`);\n            if (this.#storage) this.#storage.saveSetting(\"mapProjection\", projectionName);\n        } catch (error) {\n            console.error(\"Error changing projection:\", error);\n            this.#map.setProjection(\"mercator\");\n        }\n    }\n    /**\r\n     * Adds Mapbox GL JS DEM source and enables 3D terrain.\r\n     */ enableTerrain() {\n        console.log(\"\\uD83C\\uDFD4\\uFE0F Enabling 3D Terrain mode...\");\n        const DEM_SOURCE_ID = \"mapbox-dem\";\n        if (!this.#map.getSource(DEM_SOURCE_ID)) try {\n            this.#map.addSource(DEM_SOURCE_ID, {\n                type: \"raster-dem\",\n                url: \"mapbox://mapbox.mapbox-terrain-dem-v1\",\n                tileSize: 512,\n                maxzoom: 14\n            });\n        } catch (error) {\n            console.warn(\"Error adding terrain source:\", error);\n        }\n        try {\n            this.#map.setTerrain({\n                source: DEM_SOURCE_ID,\n                exaggeration: 1.5\n            });\n        } catch (error) {\n            console.warn(\"Error setting terrain:\", error);\n        }\n        this.#map.easeTo({\n            pitch: 80,\n            bearing: -17.6,\n            duration: 1000\n        });\n        if (this.#storage) this.#storage.saveSetting(\"terrainEnabled\", true);\n    }\n    /**\r\n     * Removes 3D terrain and returns to 2D view.\r\n     */ disableTerrain() {\n        console.log(\"\\uD83D\\uDDFA\\uFE0F Switching to 2D mode...\");\n        try {\n            this.#map.setTerrain(null);\n        } catch (error) {\n            console.warn(\"Error removing terrain:\", error);\n        }\n        setTimeout(()=>{\n            try {\n                if (this.#map.getSource(\"mapbox-dem\")) this.#map.removeSource(\"mapbox-dem\");\n            } catch (error) {\n                console.warn(\"Error removing terrain source:\", error);\n            }\n        }, 200);\n        const currentProjection = this.#storage ? this.#storage.getSetting(\"mapProjection\") || \"mercator\" : \"mercator\";\n        this.#map.easeTo({\n            pitch: 0,\n            bearing: 0,\n            duration: 1000\n        });\n        setTimeout(()=>{\n            try {\n                this.#map.setProjection(currentProjection);\n                console.log(\"\\uD83C\\uDF0D Projection restored to:\", currentProjection);\n            } catch (error) {\n                console.warn(\"Error setting projection:\", error);\n                this.#map.setProjection(\"mercator\");\n            }\n        }, 1200);\n        if (this.#storage) this.#storage.saveSetting(\"terrainEnabled\", false);\n    }\n}\n\n\n// NavigationPanel.js\n\nclass $cf14833de6bed0ba$export$8ca199cd78f9e948 {\n    #map;\n    #mapControls;\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     * @param {ProjectionPanel} projectionPanelInstance - Must be passed for projection button\r\n     */ constructor(mapInstance, mapControlsInstance, projectionPanelInstance){\n        this.#map = mapInstance;\n        this.#mapControls = mapControlsInstance;\n        this.projectionPanel = projectionPanelInstance; // Store reference\n        this.render();\n        this.addEventListeners();\n    }\n    /**\r\n     * Renders the custom navigation controls HTML into the map container.\r\n     */ render() {\n        const mapContainer = document.getElementById(\"map\");\n        const navWrapper = document.createElement(\"div\");\n        navWrapper.className = \"nav-controls-wrapper\";\n        navWrapper.innerHTML = `\n            <div class=\"custom-nav-control\" id=\"navControlsContainer\">\n                <button id=\"zoomIn\" class=\"custom-nav-btn\" title=\"Zoom In\"><i data-lucide=\"plus\"></i></button>\n                <button id=\"zoomOut\" class=\"custom-nav-btn\" title=\"Zoom Out\"><i data-lucide=\"minus\"></i></button>\n                <button id=\"resetBearing\" class=\"custom-nav-btn\" title=\"Reset Bearing\"><i data-lucide=\"compass\"></i></button>\n                <button id=\"toggle3D\" class=\"custom-nav-btn\" title=\"Switch to 3D View (2D Mode)\">\n                    <span class=\"nav-text\">3D</span>\n                </button>\n                <button id=\"projectionSwitch\" class=\"custom-nav-btn\" title=\"Map Projections\"><i data-lucide=\"earth\"></i></button>\n                <button id=\"locate\" class=\"custom-nav-btn\" title=\"Find My Location\"><i data-lucide=\"map-pin\"></i></button>\n                <button id=\"homeExtent\" class=\"custom-nav-btn\" title=\"Zoom to Pakistan\"><i data-lucide=\"house\"></i></button>\n                <button id=\"navToggleBtn\" class=\"nav-toggle-btn\" title=\"Toggle Navigation Controls\"><i data-lucide=\"chevron-left\"></i></button>\n            </div>\n        `;\n        mapContainer.appendChild(navWrapper);\n        lucide.createIcons();\n        this.restoreToggle3DState(window.ncop_storage?.getSetting(\"terrainEnabled\"));\n    }\n    addEventListeners() {\n        document.getElementById(\"navToggleBtn\")?.addEventListener(\"click\", this.#handleNavToggle.bind(this));\n        document.getElementById(\"zoomIn\")?.addEventListener(\"click\", ()=>this.#map.zoomIn({\n                duration: 300\n            }));\n        document.getElementById(\"zoomOut\")?.addEventListener(\"click\", ()=>this.#map.zoomOut({\n                duration: 300\n            }));\n        document.getElementById(\"resetBearing\")?.addEventListener(\"click\", this.#handleResetBearing.bind(this));\n        document.getElementById(\"toggle3D\")?.addEventListener(\"click\", this.#handleToggle3D.bind(this));\n        // Use the injected ProjectionPanel instance\n        document.getElementById(\"projectionSwitch\")?.addEventListener(\"click\", ()=>this.projectionPanel.togglePanel());\n        document.getElementById(\"locate\")?.addEventListener(\"click\", this.#handleLocate.bind(this));\n        document.getElementById(\"homeExtent\")?.addEventListener(\"click\", this.#handleHomeExtent.bind(this));\n    }\n    #handleNavToggle() {\n        const navControlsContainer = document.getElementById(\"navControlsContainer\");\n        const isCollapsed = navControlsContainer.classList.toggle(\"collapsed\");\n        const toggleIcon = document.getElementById(\"navToggleBtn\")?.querySelector(\"i\");\n        if (toggleIcon) {\n            toggleIcon.setAttribute(\"data-lucide\", isCollapsed ? \"chevron-right\" : \"chevron-left\");\n            lucide.createIcons();\n        }\n    }\n    #handleResetBearing() {\n        this.#map.easeTo({\n            bearing: 0,\n            pitch: 0,\n            duration: 500\n        });\n    }\n    #handleToggle3D() {\n        const toggle3DButton = document.getElementById(\"toggle3D\");\n        const currentTerrain = window.ncop_storage?.getSetting(\"terrainEnabled\") || false;\n        const newTerrainState = !currentTerrain;\n        if (newTerrainState) this.#mapControls.enableTerrain();\n        else this.#mapControls.disableTerrain();\n        this.restoreToggle3DState(newTerrainState);\n    }\n    #handleLocate() {\n        const targetCoords = [\n            73.09896723226383,\n            33.681421388232\n        ]; // Islamabad\n        this.#map.flyTo({\n            center: targetCoords,\n            zoom: 14,\n            duration: 2000\n        });\n        new mapboxgl.Marker({\n            color: \"#ff0000\"\n        }).setLngLat(targetCoords).addTo(this.#map);\n        console.log(\"\\uD83C\\uDFAF Zoomed to target location:\", targetCoords);\n    }\n    #handleHomeExtent() {\n        const pakistanCenter = [\n            69.3451,\n            30.3753\n        ];\n        this.#map.flyTo({\n            center: pakistanCenter,\n            zoom: 5,\n            duration: 2000,\n            essential: true\n        });\n        console.log(\"\\uD83C\\uDFE0 Zoomed to Pakistan extent\");\n    }\n    /**\r\n     * Updates the 3D toggle button state.\r\n     * @param {boolean} terrainEnabled - The saved terrain state.\r\n     */ restoreToggle3DState(terrainEnabled) {\n        const button = document.getElementById(\"toggle3D\");\n        if (button) {\n            if (terrainEnabled) {\n                button.title = \"Switch to 2D View (3D Mode)\";\n                button.classList.add(\"terrain-active\");\n            } else {\n                button.title = \"Switch to 3D View (2D Mode)\";\n                button.classList.remove(\"terrain-active\");\n            }\n        }\n    }\n}\n\n\n// ProjectionPanel.js\n\nclass $97ec45a09dd8a7ab$export$38034015ec4bd60e {\n    #map;\n    #mapControls;\n    #panel;\n    #storage = window.ncop_storage;\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     */ constructor(mapInstance, mapControlsInstance){\n        this.#map = mapInstance;\n        this.#mapControls = mapControlsInstance;\n        this.render();\n        this.addEventListeners();\n    }\n    /**\r\n     * Renders the projection panel HTML.\r\n     */ render() {\n        const mapContainer = document.getElementById(\"map\");\n        const savedProjection = this.#storage ? this.#storage.getSetting(\"mapProjection\") : \"mercator\";\n        const projections = [\n            {\n                key: \"mercator\",\n                name: \"Mercator\",\n                desc: \"Standard web map projection\",\n                emoji: \"\\uD83C\\uDF0D\"\n            },\n            {\n                key: \"globe\",\n                name: \"Globe\",\n                desc: \"3D globe view\",\n                emoji: \"\\uD83C\\uDF10\"\n            },\n            {\n                key: \"albers\",\n                name: \"Albers\",\n                desc: \"Equal-area conic projection\",\n                emoji: \"\\uD83D\\uDDFA\\uFE0F\"\n            },\n            {\n                key: \"equalEarth\",\n                name: \"Equal Earth\",\n                desc: \"Equal-area pseudocylindrical\",\n                emoji: \"\\uD83C\\uDF0E\"\n            },\n            {\n                key: \"naturalEarth\",\n                name: \"Natural Earth\",\n                desc: \"Compromise pseudocylindrical\",\n                emoji: \"\\uD83C\\uDF0F\"\n            },\n            {\n                key: \"winkelTripel\",\n                name: \"Winkel Tripel\",\n                desc: \"Modified azimuthal projection\",\n                emoji: \"\\uD83D\\uDDFA\\uFE0F\"\n            }\n        ];\n        this.#panel = document.createElement(\"div\");\n        this.#panel.id = \"projectionPanel\";\n        this.#panel.className = \"projection-panel\";\n        this.#panel.innerHTML = `\n            <div class=\"projection-header\">\n                <h3>Map Projections</h3>\n                <button id=\"projectionClose\" class=\"projection-close-btn\"><i data-lucide=\"x\"></i></button>\n            </div>\n            <div class=\"projection-list\">\n                ${projections.map((p)=>`\n                    <div class=\"projection-item ${p.key === savedProjection ? \"active\" : \"\"}\" data-projection=\"${p.key}\">\n                        <div class=\"projection-preview\">${p.emoji}</div>\n                        <div class=\"projection-info\">\n                            <div class=\"projection-name\">${p.name}</div>\n                            <div class=\"projection-desc\">${p.desc}</div>\n                        </div>\n                    </div>\n                `).join(\"\")}\n            </div>\n        `;\n        mapContainer.appendChild(this.#panel);\n        lucide.createIcons();\n    }\n    addEventListeners() {\n        document.getElementById(\"projectionClose\")?.addEventListener(\"click\", ()=>{\n            this.#panel.classList.remove(\"visible\");\n        });\n        this.#panel.querySelectorAll(\".projection-item\").forEach((item)=>{\n            item.addEventListener(\"click\", this.#handleProjectionSelection.bind(this, item));\n        });\n        document.addEventListener(\"click\", this.#handleOutsideClick.bind(this));\n    }\n    #handleProjectionSelection(item) {\n        const projection = item.dataset.projection;\n        this.#mapControls.changeMapProjection(projection);\n        this.#panel.querySelectorAll(\".projection-item\").forEach((i)=>i.classList.remove(\"active\"));\n        item.classList.add(\"active\");\n        setTimeout(()=>{\n            this.#panel.classList.remove(\"visible\");\n        }, 500);\n    }\n    updateActiveProjection() {\n        const currentProjection = this.#storage ? this.#storage.getSetting(\"mapProjection\") || \"mercator\" : \"mercator\";\n        this.#panel.querySelectorAll(\".projection-item\").forEach((item)=>{\n            item.classList.remove(\"active\");\n            if (item.dataset.projection === currentProjection) item.classList.add(\"active\");\n        });\n    }\n    /**\r\n     * Toggles the visibility of the projection panel.\r\n     */ togglePanel() {\n        if (this.#panel) {\n            if (!this.#panel.classList.contains(\"visible\")) this.updateActiveProjection();\n            this.#panel.classList.toggle(\"visible\");\n        }\n    }\n    #handleOutsideClick(event) {\n        const projectionSwitchBtn = document.getElementById(\"projectionSwitch\");\n        if (!this.#panel.contains(event.target) && !projectionSwitchBtn.contains(event.target)) this.#panel.classList.remove(\"visible\");\n    }\n}\n\n\n// BasemapPanel.js\n\nclass $2ac62d84556b3e7e$export$427bf972e54c0c5 {\n    #map;\n    #storage = window.ncop_storage;\n    #mapControls;\n    #basemapStyles = [\n        // ... (Styles array remains the same as in the original structure)\n        {\n            id: \"streets-v12\",\n            name: \"Streets\",\n            emoji: \"\\uD83C\\uDFD9\\uFE0F\"\n        },\n        {\n            id: \"satellite-streets-v12\",\n            name: \"Satellite\",\n            emoji: \"\\uD83D\\uDEF0\\uFE0F\"\n        },\n        {\n            id: \"outdoors-v12\",\n            name: \"Outdoors\",\n            emoji: \"\\uD83C\\uDFD4\\uFE0F\"\n        },\n        {\n            id: \"light-v11\",\n            name: \"Light\",\n            emoji: \"\\u2600\\uFE0F\"\n        },\n        {\n            id: \"dark-v11\",\n            name: \"Dark\",\n            emoji: \"\\uD83C\\uDF19\"\n        },\n        {\n            id: \"satellite-v9\",\n            name: \"Satellite Only\",\n            emoji: \"\\uD83D\\uDCE1\"\n        },\n        {\n            id: \"navigation-day-v1\",\n            name: \"Navigation Day\",\n            emoji: \"\\uD83D\\uDDFA\\uFE0F\"\n        },\n        {\n            id: \"navigation-night-v1\",\n            name: \"Navigation Night\",\n            emoji: \"\\uD83C\\uDF03\"\n        }\n    ];\n    #currentStyle;\n    #labelsEnabled;\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     */ constructor(mapInstance, mapControlsInstance){\n        this.#map = mapInstance;\n        this.#mapControls = mapControlsInstance;\n        this.#currentStyle = this.#storage ? this.#storage.getMapStyle() : \"streets-v12\";\n        this.#labelsEnabled = this.#storage ? this.#storage.getLabelsState() : true;\n        this.render();\n        this.addEventListeners();\n    }\n    render() {\n        const mapContainer = document.getElementById(\"map\");\n        const basemapContainer = document.createElement(\"div\");\n        basemapContainer.className = \"custom-basemap-control\";\n        basemapContainer.innerHTML = `\n            <button id=\"basemapToggle\" class=\"custom-basemap-btn\" title=\"Change Basemap\">\n                <i data-lucide=\"layers\"></i>\n            </button>\n            <div id=\"basemapPanel\" class=\"basemap-panel\">\n                <div class=\"labels-toggle\">\n                    <span class=\"labels-toggle-text\">Show Labels</span>\n                    <div class=\"toggle-switch ${this.#labelsEnabled ? \"active\" : \"\"}\" id=\"labelsToggle\">\n                        <div class=\"toggle-slider\"></div>\n                    </div>\n                </div>\n                <div class=\"basemap-list\" id=\"basemapList\">\n                    ${this.#basemapStyles.map((style)=>`\n                        <div class=\"basemap-item ${style.id === this.#currentStyle ? \"active\" : \"\"}\" data-style=\"${style.id}\">\n                            <div class=\"basemap-image\">${style.emoji}</div>\n                            <span class=\"basemap-name\">${style.name}</span>\n                        </div>\n                    `).join(\"\")}\n                </div>\n            </div>\n        `;\n        mapContainer.appendChild(basemapContainer);\n        lucide.createIcons();\n    }\n    addEventListeners() {\n        const basemapToggle = document.getElementById(\"basemapToggle\");\n        const basemapPanel = document.getElementById(\"basemapPanel\");\n        const labelsToggle = document.getElementById(\"labelsToggle\");\n        const basemapList = document.getElementById(\"basemapList\");\n        basemapToggle?.addEventListener(\"click\", (e)=>{\n            e.stopPropagation();\n            basemapPanel.classList.toggle(\"visible\");\n        });\n        labelsToggle?.addEventListener(\"click\", this.#handleLabelsToggle.bind(this));\n        basemapList?.addEventListener(\"click\", this.#handleBasemapSelection.bind(this));\n        document.addEventListener(\"click\", this.#handleOutsideClick.bind(this));\n        const userPanel = document.getElementById(\"userPanel\");\n        if (userPanel) this.#observeUserPanel(userPanel);\n    }\n    #handleLabelsToggle() {\n        this.#labelsEnabled = !this.#labelsEnabled;\n        const labelsToggle = document.getElementById(\"labelsToggle\");\n        labelsToggle.classList.toggle(\"active\", this.#labelsEnabled);\n        if (this.#storage) this.#storage.saveLabelsState(this.#labelsEnabled);\n        this.#mapControls.toggleMapLabels(this.#labelsEnabled);\n    }\n    #handleBasemapSelection(event) {\n        const basemapItem = event.target.closest(\".basemap-item\");\n        if (basemapItem) {\n            const newStyle = basemapItem.dataset.style;\n            const basemapPanel = document.getElementById(\"basemapPanel\");\n            document.querySelectorAll(\".basemap-item\").forEach((item)=>{\n                item.classList.remove(\"active\");\n            });\n            basemapItem.classList.add(\"active\");\n            this.#map.setStyle(`mapbox://styles/mapbox/${newStyle}`);\n            this.#currentStyle = newStyle;\n            if (this.#storage) this.#storage.saveMapStyle(newStyle);\n            basemapPanel.classList.remove(\"visible\");\n            // Reapply labels setting after style loads\n            this.#map.once(\"styledata\", ()=>{\n                if (!this.#labelsEnabled) this.#mapControls.toggleMapLabels(false);\n            });\n        }\n    }\n    #handleOutsideClick(event) {\n        const basemapToggle = document.getElementById(\"basemapToggle\");\n        const basemapPanel = document.getElementById(\"basemapPanel\");\n        if (!basemapPanel.contains(event.target) && !basemapToggle.contains(event.target)) basemapPanel.classList.remove(\"visible\");\n    }\n    #observeUserPanel(userPanel) {\n        const basemapContainer = document.querySelector(\".custom-basemap-control\");\n        const basemapPanel = document.getElementById(\"basemapPanel\");\n        const observer = new MutationObserver((mutations)=>{\n            mutations.forEach((mutation)=>{\n                if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n                    if (userPanel.classList.contains(\"user-panel-visible\")) {\n                        basemapContainer.classList.add(\"panel-open\");\n                        basemapPanel.classList.remove(\"visible\");\n                    } else basemapContainer.classList.remove(\"panel-open\");\n                }\n            });\n        });\n        observer.observe(userPanel, {\n            attributes: true\n        });\n    }\n}\n\n\n// SidebarMenu.js\n/**\r\n * Handles the main sidebar logic, including configuration loading, UI generation (accordions),\r\n * search, and NCOP control state management.\r\n */ \nclass $1af1a5229eb4a727$export$a9f2769ca96a3d36 {\n    #sidebarPanel;\n    #menuControlDiv;\n    #accordionContainer;\n    #storage = window.ncop_storage;\n    constructor(){\n        console.log(\"\\uD83D\\uDE80 SidebarMenu constructor called\");\n        this.renderButton();\n        console.log(\"\\u2705 Button rendered\");\n        this.#sidebarPanel = document.getElementById(\"sidebarPanel\");\n        console.log(\"\\uD83D\\uDD0D Sidebar panel:\", this.#sidebarPanel);\n        this.#accordionContainer = this.#sidebarPanel?.querySelector(\".accordion-container\");\n        console.log(\"\\uD83D\\uDD0D Accordion container:\", this.#accordionContainer);\n        this.loadSidebarConfig();\n        console.log(\"\\u2705 Config loading started\");\n        this.addEventListeners();\n        console.log(\"\\u2705 Event listeners added\");\n        console.log(\"\\uD83D\\uDCCB Sidebar menu initialized\");\n    }\n    renderButton() {\n        const mapContainer = document.getElementById(\"map\");\n        this.#menuControlDiv = document.createElement(\"div\");\n        this.#menuControlDiv.className = \"custom-menu-control\";\n        this.#menuControlDiv.innerHTML = `\n            <button id=\"menuToggle\" class=\"custom-menu-btn\" title=\"Open Menu\">\n                <i data-lucide=\"menu\"></i>\n            </button>\n        `;\n        mapContainer.appendChild(this.#menuControlDiv);\n        lucide.createIcons();\n    }\n    addEventListeners() {\n        document.getElementById(\"menuToggle\")?.addEventListener(\"click\", this.openSidebar.bind(this));\n        document.getElementById(\"sidebarCloseBtn\")?.addEventListener(\"click\", this.closeSidebar.bind(this));\n        document.addEventListener(\"keydown\", this.#handleKeydown.bind(this));\n    }\n    openSidebar() {\n        this.#sidebarPanel?.classList.add(\"visible\");\n        this.#menuControlDiv?.classList.add(\"hidden\");\n    }\n    closeSidebar() {\n        this.#sidebarPanel?.classList.remove(\"visible\");\n        this.#menuControlDiv?.classList.remove(\"hidden\");\n    }\n    #handleKeydown(event) {\n        if (event.key === \"Escape\" && this.#sidebarPanel?.classList.contains(\"visible\")) this.closeSidebar();\n    }\n    // --- Configuration Loading and Population ---\n    async loadSidebarConfig() {\n        try {\n            console.log(\"\\uD83D\\uDD0D Starting to import map-layers.js...\");\n            // Import the menu configuration from map-layers.js\n            const { ncop_menu_items: ncop_menu_items } = await (parcelRequire(\"cCRTO\"));\n            console.log(\"\\uD83D\\uDCCB Import successful! Menu configuration:\", ncop_menu_items);\n            console.log(\"\\uD83D\\uDCCB Available categories:\", Object.keys(ncop_menu_items || {}));\n            if (ncop_menu_items && Object.keys(ncop_menu_items).length > 0) {\n                console.log(\"\\u2705 Starting sidebar population...\");\n                this.#populateNCOPSidebar(ncop_menu_items);\n            } else {\n                console.warn(\"\\u26A0\\uFE0F ncop_menu_items is empty or undefined, using basic sidebar\");\n                this.#createBasicSidebar();\n            }\n        } catch (error) {\n            console.error(\"\\u274C Error loading NCOP menu configuration:\", error);\n            console.error(\"\\u274C Error details:\", error.message, error.stack);\n            this.#createBasicSidebar();\n        }\n    }\n    #populateNCOPSidebar(menuData) {\n        if (!this.#accordionContainer) return;\n        this.#accordionContainer.innerHTML = \"\";\n        Object.keys(menuData).forEach((categoryKey)=>{\n            const categoryData = menuData[categoryKey];\n            const categoryElement = this.#createNCOPCategorySection(categoryKey, categoryData);\n            this.#accordionContainer.appendChild(categoryElement);\n        });\n        lucide.createIcons();\n        this.#initializeAccordionHandlers();\n        this.#initializeSearchFunctionality();\n        // Restore NCOP control states after UI is ready\n        setTimeout(()=>{\n            this.#restoreNCOPStates();\n        }, 100);\n    }\n    // --- Sidebar UI Generation ---\n    #getCategoryConfig(categoryKey) {\n        const categoryConfig = {\n            gis_layers: {\n                title: \"GIS Layers\",\n                icon: \"layers\",\n                customIcon: \"/static/icons/accordion_icons/gis-layers.webp\"\n            },\n            weather: {\n                title: \"Weather Systems\",\n                icon: \"cloud\",\n                customIcon: \"/static/icons/accordion_icons/weather-systems.webp\"\n            },\n            flood: {\n                title: \"Flood Monitoring\",\n                icon: \"waves\",\n                customIcon: \"/static/icons/accordion_icons/flood.webp\"\n            },\n            air_quality: {\n                title: \"Air Quality\",\n                icon: \"wind\",\n                customIcon: \"/static/icons/accordion_icons/air-quality.webp\"\n            },\n            \"ocean/coastal\": {\n                title: \"Ocean & Coastal\",\n                icon: \"anchor\",\n                customIcon: \"/static/icons/accordion_icons/ocean-coastal.webp\"\n            },\n            \"Disaster Early Warning (DEW)\": {\n                title: \"Early Warning\",\n                icon: \"alert-triangle\",\n                customIcon: \"/static/icons/accordion_icons/early-warning.webp\"\n            }\n        };\n        return categoryConfig[categoryKey] || {\n            title: categoryKey.replace(/_/g, \" \").replace(/\\b\\w/g, (l)=>l.toUpperCase()),\n            icon: \"folder\"\n        };\n    }\n    #createNCOPCategorySection(categoryKey, categoryData) {\n        const sectionDiv = document.createElement(\"div\");\n        sectionDiv.className = \"accordion-item\";\n        const config = this.#getCategoryConfig(categoryKey);\n        const iconHtml = config.customIcon ? `<img src=\"${config.customIcon}\" alt=\"${config.title}\" class=\"accordion-custom-icon\">` : `<i data-lucide=\"${config.icon}\" class=\"accordion-icon\"></i>`;\n        const header = document.createElement(\"div\");\n        header.className = \"accordion-header\";\n        header.innerHTML = `${iconHtml}<span class=\"accordion-title\">${config.title}</span><i data-lucide=\"chevron-down\" class=\"accordion-chevron\"></i>`;\n        const content = document.createElement(\"div\");\n        content.className = \"accordion-content\";\n        Object.keys(categoryData).forEach((subcategoryKey)=>{\n            const subcategoryData = categoryData[subcategoryKey];\n            content.appendChild(this.#createNCOPSubcategorySection(subcategoryKey, subcategoryData));\n        });\n        sectionDiv.appendChild(header);\n        sectionDiv.appendChild(content);\n        return sectionDiv;\n    }\n    #createNCOPSubcategorySection(subcategoryKey, subcategoryData) {\n        const subcategoryDiv = document.createElement(\"div\");\n        subcategoryDiv.className = \"ncop-subcategory\";\n        const subcategoryHeader = document.createElement(\"div\");\n        subcategoryHeader.className = \"ncop-subcategory-header\";\n        subcategoryHeader.innerHTML = `<span>${subcategoryKey}</span><i data-lucide=\"chevron-right\" class=\"subcategory-chevron\"></i>`;\n        const itemsContainer = document.createElement(\"div\");\n        itemsContainer.className = \"ncop-items-container\";\n        // --- Render items by type: toggle, temporal, dropdown, button ---\n        console.log(`\\u{1F50D} Rendering subcategory: ${subcategoryKey}`, subcategoryData);\n        Object.keys(subcategoryData).forEach((typeKey)=>{\n            const items = subcategoryData[typeKey];\n            console.log(`\\u{1F50D} Processing type: ${typeKey}`, items);\n            // --- TOGGLE CASE ---\n            // JSON: { toggle: { itemKey: { label: ... }, ... } }\n            // HTML: label + switch\n            if (typeKey === \"toggle\") {\n                console.log(`\\u{2705} Creating toggle items for ${typeKey}:`, Object.keys(items));\n                Object.keys(items).forEach((itemKey)=>{\n                    console.log(`\\u{1F50D} Creating toggle item: ${itemKey}`, items[itemKey]);\n                    const toggleElement = this.#createToggleItem(itemKey, items[itemKey]);\n                    if (toggleElement) {\n                        console.log(`\\u{2705} Created toggle element:`, toggleElement);\n                        itemsContainer.appendChild(toggleElement);\n                    } else console.error(`\\u{274C} Failed to create toggle element for ${itemKey}`);\n                });\n            } else if (typeKey === \"temporal\") {\n                console.log(`\\u{2705} Creating temporal items for ${typeKey}:`, Object.keys(items));\n                const grid = document.createElement(\"div\");\n                grid.className = \"ncop-grid\";\n                Object.keys(items).forEach((itemKey)=>{\n                    console.log(`\\u{1F50D} Creating temporal item: ${itemKey}`, items[itemKey]);\n                    const temporalElement = this.#createTemporalItem(itemKey, items[itemKey]);\n                    if (temporalElement) {\n                        console.log(`\\u{2705} Created temporal element:`, temporalElement);\n                        grid.appendChild(temporalElement);\n                    } else console.error(`\\u{274C} Failed to create temporal element for ${itemKey}`);\n                });\n                itemsContainer.appendChild(grid);\n            } else if (typeKey === \"dropdown\") {\n                console.log(`\\u{2705} Creating dropdown item for ${typeKey}:`, items);\n                const dropdownElement = this.#createDropdownItem(typeKey, items);\n                if (dropdownElement) {\n                    console.log(`\\u{2705} Created dropdown element:`, dropdownElement);\n                    itemsContainer.appendChild(dropdownElement);\n                } else console.error(`\\u{274C} Failed to create dropdown element for ${typeKey}`);\n            } else if (typeKey === \"button\") {\n                console.log(`\\u{2705} Creating button items for ${typeKey}:`, Object.keys(items));\n                const grid = document.createElement(\"div\");\n                grid.className = \"ncop-grid\";\n                Object.keys(items).forEach((itemKey)=>{\n                    console.log(`\\u{1F50D} Creating button item: ${itemKey}`, items[itemKey]);\n                    const buttonElement = this.#createButtonItem(itemKey, items[itemKey]);\n                    if (buttonElement) {\n                        console.log(`\\u{2705} Created button element:`, buttonElement);\n                        grid.appendChild(buttonElement);\n                    } else console.error(`\\u{274C} Failed to create button element for ${itemKey}`);\n                });\n                itemsContainer.appendChild(grid);\n            } else console.warn(`\\u{26A0}\\u{FE0F} Unknown item type: ${typeKey}`, items);\n        });\n        subcategoryHeader.addEventListener(\"click\", function() {\n            const isExpanded = this.classList.contains(\"expanded\");\n            const parentContent = this.closest(\".accordion-content\");\n            const otherHeaders = parentContent?.querySelectorAll(\".ncop-subcategory-header\");\n            otherHeaders?.forEach((header)=>{\n                if (header !== this) {\n                    header.classList.remove(\"expanded\");\n                    header.nextElementSibling?.classList.remove(\"visible\");\n                }\n            });\n            if (!isExpanded) {\n                this.classList.add(\"expanded\");\n                itemsContainer.classList.add(\"visible\");\n            } else {\n                this.classList.remove(\"expanded\");\n                itemsContainer.classList.remove(\"visible\");\n            }\n        });\n        subcategoryDiv.appendChild(subcategoryHeader);\n        subcategoryDiv.appendChild(itemsContainer);\n        return subcategoryDiv;\n    }\n    #createToggleItem(itemKey, itemData) {\n        console.log(`\\u{1F527} Creating toggle item: ${itemKey}`, itemData);\n        if (!itemData || !itemData.label) {\n            console.error(`\\u{274C} Invalid toggle item data for ${itemKey}:`, itemData);\n            return null;\n        }\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.className = \"ncop-item ncop-item-toggle\";\n        itemDiv.innerHTML = `\n            <span class=\"ncop-item-label\">${itemData.label}</span>\n            <label class=\"ncop-toggle\">\n                <input type=\"checkbox\" data-item-key=\"${itemKey}\">\n                <span class=\"ncop-toggle-slider\"></span>\n            </label>\n        `;\n        console.log(`\\u{2705} Toggle item created successfully:`, itemDiv);\n        return itemDiv;\n    }\n    #createTemporalItem(itemKey, itemData) {\n        console.log(`\\u{1F527} Creating temporal item: ${itemKey}`, itemData);\n        if (!itemData || !itemData.label) {\n            console.error(`\\u{274C} Invalid temporal item data for ${itemKey}:`, itemData);\n            return null;\n        }\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.className = \"ncop-item ncop-item-temporal\";\n        itemDiv.innerHTML = `\n            <div class=\"ncop-item-image\">\n                <img src=\"${itemData.image || '/static/images/placeholder.png'}\" alt=\"${itemData.label}\" />\n            </div>\n            <span class=\"ncop-item-label\">${itemData.label}</span>\n        `;\n        // Add click handler for image selection\n        const imageElement = itemDiv.querySelector('.ncop-item-image');\n        imageElement.addEventListener('click', (event)=>{\n            event.stopPropagation();\n            this.#handleImageSelection(imageElement);\n        });\n        console.log(`\\u{2705} Temporal item created successfully:`, itemDiv);\n        return itemDiv;\n    }\n    #createDropdownItem(itemKey, itemData) {\n        console.log(`\\u{1F527} Creating dropdown item: ${itemKey}`, itemData);\n        if (!itemData) {\n            console.error(`\\u{274C} Invalid dropdown item data for ${itemKey}:`, itemData);\n            return null;\n        }\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.className = \"ncop-item ncop-item-dropdown\";\n        // For dropdown, endpoint/key/attribute are at the dropdown object level, not inside children\n        const endpoint = itemData.endpoint || \"\";\n        const keyField = itemData.key || \"id\";\n        const attributeField = itemData.attribute || \"label\";\n        console.log(`\\u{1F50D} Dropdown config - endpoint: ${endpoint}, key: ${keyField}, attribute: ${attributeField}`);\n        // Check if dropdown has an image\n        if (itemData.image) {\n            itemDiv.innerHTML = `\n                <div class=\"ncop-item-image\">\n                    <img src=\"${itemData.image}\" alt=\"${itemData.label || 'Dropdown'}\" />\n                </div>\n                <select class=\"ncop-dropdown\" data-endpoint=\"${endpoint}\" data-key-field=\"${keyField}\" data-attribute-field=\"${attributeField}\" data-item-key=\"${itemKey}\">\n                    <option selected>Loading...</option>\n                </select>\n            `;\n            // Add click handler for image selection\n            const imageElement = itemDiv.querySelector('.ncop-item-image');\n            imageElement.addEventListener('click', (event)=>{\n                event.stopPropagation();\n                this.#handleImageSelection(imageElement);\n            });\n        } else itemDiv.innerHTML = `\n                <select class=\"ncop-dropdown\" data-endpoint=\"${endpoint}\" data-key-field=\"${keyField}\" data-attribute-field=\"${attributeField}\" data-item-key=\"${itemKey}\">\n                    <option selected>Loading...</option>\n                </select>\n            `;\n        // Fetch and populate dropdown options asynchronously\n        setTimeout(()=>{\n            const select = itemDiv.querySelector(\"select\");\n            if (!endpoint) {\n                console.warn(`\\u{26A0}\\u{FE0F} No endpoint provided for dropdown ${itemKey}`);\n                select.innerHTML = `<option selected disabled>No endpoint</option>`;\n                return;\n            }\n            console.log(`\\u{1F4E1} Fetching dropdown data from: ${endpoint}`);\n            fetch(endpoint).then((res)=>res.json()).then((data)=>{\n                console.log(`\\u{1F4CA} Dropdown data for ${itemKey}:`, data);\n                select.innerHTML = `<option selected disabled>Select an option</option>`;\n                data.forEach((row)=>{\n                    console.log(`\\u{1F50D} Processing row:`, row);\n                    const value = row[keyField];\n                    const label = row[attributeField];\n                    console.log(`\\u{2705} Value: ${value}, Label: ${label}`);\n                    select.innerHTML += `<option value=\"${value}\">${label}</option>`;\n                });\n            }).catch((err)=>{\n                console.error(`\\u{274C} Dropdown fetch error for ${itemKey}:`, err);\n                select.innerHTML = `<option selected disabled>Error loading data</option>`;\n            });\n        }, 0);\n        console.log(`\\u{2705} Dropdown item created successfully:`, itemDiv);\n        return itemDiv;\n    }\n    #createButtonItem(itemKey, itemData) {\n        console.log(`\\u{1F527} Creating button item: ${itemKey}`, itemData);\n        if (!itemData || !itemData.label) {\n            console.error(`\\u{274C} Invalid button item data for ${itemKey}:`, itemData);\n            return null;\n        }\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.className = \"ncop-item ncop-item-button\";\n        // Set CSS custom properties for colors\n        const buttonColor = itemData.color || \"#6366f1\";\n        const borderColor = itemData.outline || \"#4f46e5\";\n        itemDiv.style.setProperty('--button-color', buttonColor);\n        itemDiv.style.setProperty('--border-color', borderColor);\n        // Create button with label on left and toggle on right\n        if (itemData.image) {\n            itemDiv.innerHTML = `\n                <div class=\"ncop-item-content\">\n                    <div class=\"ncop-item-image\">\n                        <img src=\"${itemData.image}\" alt=\"${itemData.label}\" />\n                    </div>\n                    <span class=\"ncop-item-label\">${itemData.label}</span>\n                </div>\n                <label class=\"ncop-toggle\">\n                    <input type=\"checkbox\" data-item-key=\"${itemKey}\">\n                    <span class=\"ncop-toggle-slider\"></span>\n                </label>\n            `;\n            // Add click handler for image selection\n            const imageElement = itemDiv.querySelector('.ncop-item-image');\n            imageElement.addEventListener('click', (event)=>{\n                event.stopPropagation();\n                this.#handleImageSelection(imageElement);\n            });\n        } else itemDiv.innerHTML = `\n                <span class=\"ncop-item-label\">${itemData.label}</span>\n                <label class=\"ncop-toggle\">\n                    <input type=\"checkbox\" data-item-key=\"${itemKey}\">\n                    <span class=\"ncop-toggle-slider\"></span>\n                </label>\n            `;\n        console.log(`\\u{2705} Button item created successfully:`, itemDiv);\n        return itemDiv;\n    }\n    #handleImageSelection(clickedImageElement) {\n        // Check if the clicked image is already selected\n        const isAlreadySelected = clickedImageElement.classList.contains('selected');\n        // Remove selection from all images\n        document.querySelectorAll('.ncop-item-image.selected').forEach((image)=>{\n            image.classList.remove('selected');\n        });\n        // If it wasn't already selected, select it\n        if (!isAlreadySelected) clickedImageElement.classList.add('selected');\n        console.log(`\\u{1F5BC}\\u{FE0F} Image selection updated for:`, clickedImageElement);\n    }\n    #initializeAccordionHandlers() {\n        document.querySelectorAll(\".accordion-header\").forEach((header)=>{\n            header.addEventListener(\"click\", function() {\n                const accordionContent = this.nextElementSibling;\n                const isActive = this.classList.contains(\"active\");\n                document.querySelectorAll(\".accordion-header\").forEach((otherHeader)=>{\n                    if (otherHeader !== this) {\n                        otherHeader.classList.remove(\"active\");\n                        otherHeader.nextElementSibling?.classList.remove(\"expanded\");\n                    }\n                });\n                this.classList.toggle(\"active\", !isActive);\n                accordionContent?.classList.toggle(\"expanded\", !isActive);\n            });\n        });\n    }\n    #createBasicSidebar() {\n        if (!this.#accordionContainer) return;\n        this.#accordionContainer.innerHTML = `\n            <div class=\"accordion-item\">\n                <div class=\"accordion-header\">\n                    <i data-lucide=\"settings\"></i>\n                    <span>System Menu</span>\n                    <i data-lucide=\"chevron-down\" class=\"accordion-chevron\"></i>\n                </div>\n                <div class=\"accordion-content\">\n                    <ul class=\"accordion-items\">\n                        <li class=\"accordion-item-entry\" data-action=\"exportData\">\n                            <i data-lucide=\"download\"></i><span>Export Settings</span>\n                        </li>\n                        <li class=\"accordion-item-entry\" data-action=\"showHelp\">\n                            <i data-lucide=\"help-circle\"></i><span>Help & Support</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        `;\n        this.#initializeAccordionHandlers();\n        lucide.createIcons();\n    }\n    // --- NCOP Control Handlers ---\n    #handleNCOPToggle(endpoint, itemKey, isEnabled) {\n        console.log(`\\u{1F504} NCOP Toggle - ${itemKey}:`, {\n            endpoint: endpoint,\n            enabled: isEnabled\n        });\n        if (this.#storage) this.#storage.saveSetting(`ncop_toggle_${itemKey}`, isEnabled);\n        const message = isEnabled ? \"enabled\" : \"disabled\";\n        console.log(`\\u{1F4E1} ${itemKey} has been ${message}`);\n    // Placeholder for API/Map Layer logic\n    }\n    #handleNCOPDropdown(endpoint, itemKey, selectedValue) {\n        console.log(`\\u{1F4CB} NCOP Dropdown - ${itemKey}:`, {\n            endpoint: endpoint,\n            value: selectedValue\n        });\n        if (this.#storage) this.#storage.saveSetting(`ncop_dropdown_${itemKey}`, selectedValue);\n        if (selectedValue === \"\") {\n            console.log(`\\u{1F4CB} ${itemKey} selection cleared`);\n            return;\n        }\n        console.log(`\\u{1F4CA} ${itemKey} set to: ${selectedValue}`);\n    // Placeholder for API/Map Layer logic\n    }\n    #restoreNCOPStates() {\n        if (!this.#storage) return;\n        document.querySelectorAll('.ncop-toggle input[type=\"checkbox\"]').forEach((toggle)=>{\n            const itemKey = toggle.dataset.itemKey;\n            const savedState = this.#storage.getSetting(`ncop_toggle_${itemKey}`);\n            if (savedState !== null) toggle.checked = savedState;\n        });\n        document.querySelectorAll(\".ncop-dropdown\").forEach((dropdown)=>{\n            const itemKey = dropdown.dataset.itemKey;\n            const savedState = this.#storage.getSetting(`ncop_dropdown_${itemKey}`);\n            if (savedState !== null) dropdown.value = savedState;\n        });\n        console.log(\"\\uD83D\\uDD04 NCOP control states restored from localStorage\");\n    }\n    // --- Search Functionality ---\n    #initializeSearchFunctionality() {\n        const searchInput = document.getElementById(\"sidebarSearch\");\n        const clearSearchBtn = document.getElementById(\"clearSearch\");\n        if (!searchInput || !clearSearchBtn) return;\n        searchInput.addEventListener(\"input\", (e)=>{\n            const searchTerm = e.target.value.toLowerCase().trim();\n            if (searchTerm) {\n                clearSearchBtn.style.display = \"flex\";\n                this.#performSearch(searchTerm);\n            } else {\n                clearSearchBtn.style.display = \"none\";\n                this.#clearSearch();\n            }\n        });\n        clearSearchBtn.addEventListener(\"click\", ()=>{\n            searchInput.value = \"\";\n            clearSearchBtn.style.display = \"none\";\n            this.#clearSearch();\n        });\n    }\n    #performSearch(searchTerm) {\n        const accordionContainer = this.#accordionContainer;\n        if (!accordionContainer) return;\n        let visibleCount = 0;\n        const accordions = accordionContainer.querySelectorAll(\".accordion-item\");\n        accordions.forEach((accordion)=>{\n            let accordionHasMatch = false;\n            const accordionHeader = accordion.querySelector(\".accordion-header\");\n            const accordionContent = accordion.querySelector(\".accordion-content\");\n            const accordionTitleElement = accordionHeader.querySelector(\"span\");\n            const accordionTitle = accordionTitleElement?.textContent.toLowerCase() || \"\";\n            const accordionMatches = accordionTitle.includes(searchTerm);\n            if (accordionMatches) accordionHasMatch = true;\n            const subcategories = accordion.querySelectorAll(\".ncop-subcategory\");\n            let visibleSubcategories = 0;\n            subcategories.forEach((subcategory)=>{\n                let subcategoryHasMatch = false;\n                const subcategoryHeader = subcategory.querySelector(\".ncop-subcategory-header\");\n                const subcategoryHeaderSpan = subcategoryHeader?.querySelector(\"span\");\n                const subcategoryTitle = subcategoryHeaderSpan ? subcategoryHeaderSpan.textContent.toLowerCase() : \"\";\n                const itemsContainer = subcategory.querySelector(\".ncop-items-container\");\n                if (subcategoryTitle.includes(searchTerm)) {\n                    subcategoryHasMatch = true;\n                    accordionHasMatch = true;\n                }\n                const items = subcategory.querySelectorAll(\".ncop-item\");\n                let visibleItems = 0;\n                items.forEach((item)=>{\n                    const itemLabel = item.querySelector(\".ncop-item-label\");\n                    const itemText = itemLabel ? itemLabel.textContent.toLowerCase() : \"\";\n                    const toggleInput = item.querySelector('input[type=\"checkbox\"]');\n                    const dropdownSelect = item.querySelector(\"select\");\n                    const allItemText = [\n                        itemText,\n                        toggleInput ? toggleInput.dataset.endpoint || \"\" : \"\",\n                        dropdownSelect ? dropdownSelect.dataset.endpoint || \"\" : \"\",\n                        subcategoryTitle,\n                        accordionTitle\n                    ].join(\" \").toLowerCase();\n                    if (allItemText.includes(searchTerm)) {\n                        item.style.display = \"flex\";\n                        visibleItems++;\n                        subcategoryHasMatch = true;\n                        accordionHasMatch = true;\n                        this.#highlightText(itemLabel, searchTerm);\n                    } else {\n                        item.style.display = \"none\";\n                        this.#removeHighlight(itemLabel);\n                    }\n                });\n                if (subcategoryHasMatch) {\n                    subcategory.style.display = \"block\";\n                    visibleSubcategories++;\n                    if (subcategoryTitle.includes(searchTerm)) this.#highlightText(subcategoryHeaderSpan, searchTerm);\n                    else this.#removeHighlight(subcategoryHeaderSpan);\n                    if (itemsContainer && subcategoryHeader && visibleItems > 0) {\n                        itemsContainer.classList.add(\"visible\");\n                        subcategoryHeader.classList.add(\"expanded\");\n                    }\n                } else {\n                    subcategory.style.display = \"none\";\n                    this.#removeHighlight(subcategoryHeaderSpan);\n                }\n            });\n            if (accordionHasMatch) {\n                accordion.style.display = \"block\";\n                visibleCount++;\n                if (accordionContent && visibleSubcategories > 0) {\n                    accordionContent.classList.add(\"expanded\");\n                    accordionHeader.classList.add(\"active\");\n                }\n                if (accordionMatches && accordionTitleElement) this.#highlightText(accordionTitleElement, searchTerm);\n                else if (accordionTitleElement) this.#removeHighlight(accordionTitleElement);\n            } else {\n                accordion.style.display = \"none\";\n                if (accordionTitleElement) this.#removeHighlight(accordionTitleElement);\n            }\n        });\n        if (visibleCount === 0) this.#showNoResultsMessage();\n        else this.#removeNoResultsMessage();\n    }\n    #clearSearch() {\n        const accordionContainer = this.#accordionContainer;\n        if (!accordionContainer) return;\n        accordionContainer.querySelectorAll(\".accordion-item\").forEach((accordion)=>{\n            accordion.style.display = \"block\";\n            const header = accordion.querySelector(\".accordion-header\");\n            const content = accordion.querySelector(\".accordion-content\");\n            const headerTitle = header.querySelector(\"span\");\n            this.#removeHighlight(headerTitle);\n            header.classList.remove(\"active\");\n            content.classList.remove(\"expanded\");\n            accordion.querySelectorAll(\".ncop-subcategory\").forEach((subcategory)=>{\n                subcategory.style.display = \"block\";\n                const subHeader = subcategory.querySelector(\".ncop-subcategory-header\");\n                const subHeaderTitle = subHeader?.querySelector(\"span\");\n                const itemsContainer = subcategory.querySelector(\".ncop-items-container\");\n                this.#removeHighlight(subHeaderTitle);\n                subHeader?.classList.remove(\"expanded\");\n                itemsContainer?.classList.remove(\"visible\");\n                subcategory.querySelectorAll(\".ncop-item\").forEach((item)=>{\n                    item.style.display = \"flex\";\n                    const label = item.querySelector(\".ncop-item-label\");\n                    this.#removeHighlight(label);\n                });\n            });\n        });\n        this.#removeNoResultsMessage();\n    }\n    #highlightText(element, searchTerm) {\n        if (!element || !searchTerm) return;\n        this.#removeHighlight(element); // Ensure no prior highlights\n        const originalText = element.textContent;\n        const regex = new RegExp(`(${searchTerm})`, \"gi\");\n        const highlightedText = originalText.replace(regex, '<span class=\"search-highlight\">$1</span>');\n        element.innerHTML = highlightedText;\n    }\n    #removeHighlight(element) {\n        if (!element) return;\n        // Use a loop to handle nested structure if necessary\n        const highlightedElements = element.querySelectorAll(\".search-highlight\");\n        highlightedElements.forEach((highlighted)=>{\n            const parent = highlighted.parentNode;\n            parent.replaceChild(document.createTextNode(highlighted.textContent), highlighted);\n            parent.normalize();\n        });\n        // Also clean up the element itself if it was highlighted\n        if (element.classList.contains(\"search-highlight\")) {\n            const parent = element.parentNode;\n            parent.replaceChild(document.createTextNode(element.textContent), element);\n            parent.normalize();\n        }\n    }\n    #showNoResultsMessage() {\n        this.#removeNoResultsMessage();\n        if (this.#accordionContainer) {\n            const noResultsDiv = document.createElement(\"div\");\n            noResultsDiv.className = \"no-results-message\";\n            noResultsDiv.innerHTML = `<p>No results found</p><small>Try different keywords or check spelling</small>`;\n            this.#accordionContainer.appendChild(noResultsDiv);\n            lucide.createIcons();\n        }\n    }\n    #removeNoResultsMessage() {\n        document.querySelector(\".no-results-message\")?.remove();\n    }\n}\n\n\n// UtilityManager.js\n/**\r\n * Encapsulates global utility functions (export/import settings, storage info)\r\n * and handles keyboard shortcuts.\r\n */ class $52486f377b0af9fc$export$84786580e9446296 {\n    #storage = window.ncop_storage;\n    constructor(){\n        this.#exposeGlobals();\n        this.#addKeyboardShortcuts();\n        this.#logInfo();\n    }\n    /**\r\n     * Exposes utility functions globally under window.ncop_utils.\r\n     */ #exposeGlobals() {\n        window.ncop_utils = {\n            exportSettings: this.exportSettings.bind(this),\n            importSettings: this.importSettings.bind(this),\n            clearAllData: this.clearAllData.bind(this),\n            showStorageInfo: this.showStorageInfo.bind(this),\n            resetToDefaults: this.resetToDefaults.bind(this)\n        };\n    }\n    #addKeyboardShortcuts() {\n        document.addEventListener(\"keydown\", (e)=>{\n            if (e.ctrlKey && e.shiftKey) switch(e.key){\n                case \"E\":\n                    e.preventDefault();\n                    this.exportSettings();\n                    break;\n                case \"I\":\n                    e.preventDefault();\n                    this.importSettings();\n                    break;\n                case \"D\":\n                    e.preventDefault();\n                    this.showStorageInfo();\n                    break;\n            }\n        });\n    }\n    #logInfo() {\n        console.log(\"\\uD83D\\uDD27 NCOP Utilities loaded. Available commands: (ncop_utils.[command])\");\n    }\n    // --- Core Utility Methods ---\n    exportSettings() {\n        if (this.#storage) {\n            const data = this.#storage.exportSettings();\n            const blob = new Blob([\n                data\n            ], {\n                type: \"application/json\"\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = `ncop-settings-${new Date().toISOString().split(\"T\")[0]}.json`;\n            a.click();\n            URL.revokeObjectURL(url);\n            console.log(\"\\uD83D\\uDCE5 Settings exported\");\n        }\n    }\n    importSettings() {\n        const input = document.createElement(\"input\");\n        input.type = \"file\";\n        input.accept = \".json\";\n        input.onchange = (e)=>{\n            const file = e.target.files[0];\n            if (file) {\n                const reader = new FileReader();\n                reader.onload = (e)=>{\n                    const jsonData = e.target.result;\n                    if (this.#storage && this.#storage.importSettings(jsonData)) alert(\"Settings imported successfully! Please refresh the page.\");\n                    else alert(\"Failed to import settings. Please check the file format.\");\n                };\n                reader.readAsText(file);\n            }\n        };\n        input.click();\n    }\n    clearAllData() {\n        if (confirm(\"Are you sure you want to clear all saved data? This cannot be undone.\")) {\n            if (this.#storage) {\n                this.#storage.clearUserData();\n                alert(\"All data cleared! Please refresh the page.\");\n            }\n        }\n    }\n    showStorageInfo() {\n        if (this.#storage) {\n            const info = this.#storage.getStorageInfo();\n            console.table(info);\n            const message = `\nStorage Information:\n- Total Keys: ${info.totalKeys}\n- Total Size: ${info.sizeKB} KB\n- Max Size: ${info.maxSize}\n- User: ${window.USERNAME || \"Guest\"}\n            `;\n            alert(message);\n        }\n    }\n    resetToDefaults() {\n        if (confirm(\"Reset all settings to defaults? This will clear your preferences.\")) {\n            if (this.#storage) {\n                this.#storage.clearUserData();\n                this.#storage.initializeUserSettings();\n                alert(\"Settings reset to defaults! Please refresh the page.\");\n            }\n        }\n    }\n}\n\n\n// UserControl.js\n/**\r\n * Handles the top-right user control button and panel visibility.\r\n */ class $fafc3ae00a65de84$export$c03fb10402b1630c {\n    constructor(){\n        this.render();\n        this.addEventListeners();\n    }\n    /**\r\n     * Renders the custom user button HTML.\r\n     */ render() {\n        const mapContainer = document.getElementById(\"map\");\n        const userContainer = document.createElement(\"div\");\n        userContainer.className = \"custom-user-control\";\n        userContainer.innerHTML = `\n            <button id=\"userToggle\" class=\"custom-user-btn\" title=\"User Info\">\n                <i data-lucide=\"user\"></i>\n            </button>\n        `;\n        mapContainer.appendChild(userContainer);\n        lucide.createIcons();\n    }\n    /**\r\n     * Adds event listeners for the user button and outside clicks.\r\n     */ addEventListeners() {\n        const userToggle = document.getElementById(\"userToggle\");\n        const userPanel = document.getElementById(\"userPanel\");\n        if (userToggle && userPanel) {\n            userToggle.addEventListener(\"click\", function() {\n                userPanel.classList.toggle(\"user-panel-visible\");\n            });\n            document.addEventListener(\"click\", function(event) {\n                if (!userPanel.contains(event.target) && !userToggle.contains(event.target)) userPanel.classList.remove(\"user-panel-visible\");\n            });\n        }\n    }\n}\n\n\n// 2. IMMEDIATELY initialize the global variable (window.ncop_storage) upon module load.\n// Parcel runs this code before the DOMContentLoaded event fires, ensuring the variable is set when DashboardManager.init() runs.\nwindow.ncop_storage = null;\nif ((0, $116e8acf3ac025b3$export$2e2bcd8739ae039).isAvailable()) window.ncop_storage = new (0, $116e8acf3ac025b3$export$2e2bcd8739ae039)();\nelse console.warn(\"\\u26A0\\uFE0F LocalStorage not available - user preferences will not be saved\");\n/**\r\n * Main class to handle setup, initialization, and overall state management.\r\n */ class $ec50055d448bfcd5$var$DashboardManager {\n    #map;\n    // #storage now safely accesses the global variable set above\n    #storage = window.ncop_storage;\n    #mapControls;\n    init() {\n        if (!window.MAPBOX_ACCESS_TOKEN) {\n            console.error(\"Mapbox access token not found. Please check your environment configuration.\");\n            return;\n        }\n        mapboxgl.accessToken = window.MAPBOX_ACCESS_TOKEN;\n        this.#initializeMap();\n        this.#map.on(\"load\", this.#onMapLoad.bind(this));\n        this.#map.on(\"moveend\", this.#onMapMoveEnd.bind(this));\n        this.#map.on(\"error\", (e)=>console.error(\"Map error:\", e));\n        this.#mapControls = new (0, $93b279f81ac42fb1$export$7628ccdac312035f)(this.#map, this.#storage);\n        // ProjectionPanel must be initialized before NavigationPanel to pass its instance\n        const projectionPanel = new (0, $97ec45a09dd8a7ab$export$38034015ec4bd60e)(this.#map, this.#mapControls);\n        // Initialize UI components, passing dependencies as needed\n        new (0, $cf14833de6bed0ba$export$8ca199cd78f9e948)(this.#map, this.#mapControls, projectionPanel);\n        new (0, $fafc3ae00a65de84$export$c03fb10402b1630c)();\n        new (0, $2ac62d84556b3e7e$export$427bf972e54c0c5)(this.#map, this.#mapControls);\n        new (0, $1af1a5229eb4a727$export$a9f2769ca96a3d36)();\n        new (0, $52486f377b0af9fc$export$84786580e9446296)();\n        if (this.#storage) this.#storage.updateLastLogin();\n        console.log(\"Dashboard initialized using a modular, class-based structure.\");\n    }\n    #initializeMap() {\n        const savedStyle = this.#storage ? this.#storage.getMapStyle() : \"streets-v12\";\n        const savedCenter = this.#storage ? this.#storage.getSetting(\"mapCenter\") : [\n            74.3,\n            31.5\n        ];\n        const savedZoom = this.#storage ? this.#storage.getSetting(\"mapZoom\") : 6;\n        const savedProjection = this.#storage ? this.#storage.getSetting(\"mapProjection\") : \"mercator\";\n        this.#map = new mapboxgl.Map({\n            container: \"map\",\n            style: `mapbox://styles/mapbox/${savedStyle}`,\n            center: savedCenter,\n            zoom: savedZoom,\n            projection: savedProjection || \"mercator\",\n            hash: true\n        });\n    }\n    #onMapLoad() {\n        console.log(\"Map loaded successfully\");\n        if (this.#storage) {\n            const savedBearing = this.#storage.getSetting(\"mapBearing\");\n            const savedPitch = this.#storage.getSetting(\"mapPitch\");\n            const savedProjection = this.#storage.getSetting(\"mapProjection\");\n            const savedTerrain = this.#storage.getSetting(\"terrainEnabled\");\n            const labelsEnabled = this.#storage.getLabelsState();\n            if (savedBearing !== null || savedPitch !== null) {\n                this.#map.setBearing(savedBearing || 0);\n                this.#map.setPitch(savedPitch || 0);\n            }\n            if (savedProjection && savedProjection !== \"mercator\") setTimeout(()=>{\n                this.#mapControls.changeMapProjection(savedProjection);\n            }, 500);\n            if (savedTerrain) setTimeout(()=>{\n                this.#mapControls.enableTerrain();\n            // Note: Update NavigationPanel state here if needed\n            }, 800);\n            if (!labelsEnabled) setTimeout(()=>{\n                this.#mapControls.toggleMapLabels(false);\n            }, 1000);\n        }\n    }\n    #onMapMoveEnd() {\n        if (this.#storage) // Assumes ncop_storage.saveMapState exists and takes the map instance\n        this.#storage.saveMapState(this.#map);\n    }\n}\n// Global Initialization\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    lucide.createIcons();\n    // REMOVED: setTimeout is no longer needed as the storage manager is initialized synchronously above.\n    new $ec50055d448bfcd5$var$DashboardManager().init();\n});\n\n})();\n//# sourceMappingURL=dashboard.js.map\n","module.exports = (require(\"./helpers/browser/js-loader\")(parcelRequire.resolve(\"ewq3m\"))).then(() => parcelRequire('h3r7n'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same script twice (e.g. if it was already in the HTML)\n    var existingScripts = document.getElementsByTagName('script');\n    if ([].concat(existingScripts).some(function (script) {\n      return script.src === bundle;\n    })) {\n      resolve();\n      return;\n    }\n    var preloadLink = document.createElement('link');\n    preloadLink.href = bundle;\n    preloadLink.rel = 'preload';\n    preloadLink.as = 'script';\n    document.head.appendChild(preloadLink);\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.src = bundle;\n    script.onerror = function (e) {\n      var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n      script.onerror = script.onload = null;\n      script.remove();\n      reject(error);\n    };\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n    case 'prefetch':\n      return cachedPrefetches;\n    default:\n      return cachedBundles;\n  }\n}\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","parcelRequire.extendImportMap({\"ewq3m\":\"map-layers.fa6673b4.js\"});","// main.js (New Dashboard Entry Point)\r\n\r\n// --------------------------------------------------------\r\n// --- START: NCOP Storage Manager Integration (The Fix) ---\r\n// --------------------------------------------------------\r\n\r\n// 1. Import the NCOPStorageManager class from its source file.\r\n// NOTE: This assumes you have added 'export default NCOPStorageManager;' to the end of your local-storage-manager.js file.\r\nimport NCOPStorageManager from \"./local-storage-manager\";\r\n\r\n// 2. IMMEDIATELY initialize the global variable (window.ncop_storage) upon module load.\r\n// Parcel runs this code before the DOMContentLoaded event fires, ensuring the variable is set when DashboardManager.init() runs.\r\nwindow.ncop_storage = null;\r\nif (NCOPStorageManager.isAvailable()) {\r\n    window.ncop_storage = new NCOPStorageManager();\r\n} else {\r\n    console.warn(\r\n        \"⚠️ LocalStorage not available - user preferences will not be saved\"\r\n    );\r\n}\r\n\r\n// --------------------------------------------------------\r\n// --- END: NCOP Storage Manager Integration (The Fix) ---\r\n// --------------------------------------------------------\r\n\r\nimport { MapControls } from \"./map-controls.js\";\r\nimport { NavigationPanel } from \"./navigation-panel.js\";\r\nimport { ProjectionPanel } from \"./projection-panel.js\";\r\nimport { BasemapPanel } from \"./basemap-panel.js\";\r\nimport { SidebarMenu } from \"./sidebar-menu.js\";\r\nimport { UtilityManager } from \"./utility-manager.js\";\r\nimport { UserControl } from \"./user-control.js\";\r\n\r\n/**\r\n * Main class to handle setup, initialization, and overall state management.\r\n */\r\nclass DashboardManager {\r\n    #map;\r\n    // #storage now safely accesses the global variable set above\r\n    #storage = window.ncop_storage;\r\n    #mapControls;\r\n\r\n    init() {\r\n        if (!window.MAPBOX_ACCESS_TOKEN) {\r\n            console.error(\r\n                \"Mapbox access token not found. Please check your environment configuration.\"\r\n            );\r\n            return;\r\n        }\r\n        mapboxgl.accessToken = window.MAPBOX_ACCESS_TOKEN;\r\n\r\n        this.#initializeMap();\r\n        this.#map.on(\"load\", this.#onMapLoad.bind(this));\r\n        this.#map.on(\"moveend\", this.#onMapMoveEnd.bind(this));\r\n        this.#map.on(\"error\", (e) => console.error(\"Map error:\", e));\r\n\r\n        this.#mapControls = new MapControls(this.#map, this.#storage);\r\n\r\n        // ProjectionPanel must be initialized before NavigationPanel to pass its instance\r\n        const projectionPanel = new ProjectionPanel(this.#map, this.#mapControls);\r\n\r\n        // Initialize UI components, passing dependencies as needed\r\n        new NavigationPanel(this.#map, this.#mapControls, projectionPanel);\r\n        new UserControl();\r\n        new BasemapPanel(this.#map, this.#mapControls);\r\n        new SidebarMenu();\r\n        new UtilityManager();\r\n\r\n        if (this.#storage) {\r\n            this.#storage.updateLastLogin();\r\n        }\r\n\r\n        console.log(\r\n            \"Dashboard initialized using a modular, class-based structure.\"\r\n        );\r\n    }\r\n\r\n    #initializeMap() {\r\n        const savedStyle = this.#storage\r\n            ? this.#storage.getMapStyle()\r\n            : \"streets-v12\";\r\n        const savedCenter = this.#storage\r\n            ? this.#storage.getSetting(\"mapCenter\")\r\n            : [74.3, 31.5];\r\n        const savedZoom = this.#storage ? this.#storage.getSetting(\"mapZoom\") : 6;\r\n        const savedProjection = this.#storage\r\n            ? this.#storage.getSetting(\"mapProjection\")\r\n            : \"mercator\";\r\n\r\n        this.#map = new mapboxgl.Map({\r\n            container: \"map\",\r\n            style: `mapbox://styles/mapbox/${savedStyle}`,\r\n            center: savedCenter,\r\n            zoom: savedZoom,\r\n            projection: savedProjection || \"mercator\",\r\n            hash: true,\r\n        });\r\n    }\r\n\r\n    #onMapLoad() {\r\n        console.log(\"Map loaded successfully\");\r\n\r\n        if (this.#storage) {\r\n            const savedBearing = this.#storage.getSetting(\"mapBearing\");\r\n            const savedPitch = this.#storage.getSetting(\"mapPitch\");\r\n            const savedProjection = this.#storage.getSetting(\"mapProjection\");\r\n            const savedTerrain = this.#storage.getSetting(\"terrainEnabled\");\r\n            const labelsEnabled = this.#storage.getLabelsState();\r\n\r\n            if (savedBearing !== null || savedPitch !== null) {\r\n                this.#map.setBearing(savedBearing || 0);\r\n                this.#map.setPitch(savedPitch || 0);\r\n            }\r\n\r\n            if (savedProjection && savedProjection !== \"mercator\") {\r\n                setTimeout(() => {\r\n                    this.#mapControls.changeMapProjection(savedProjection);\r\n                }, 500);\r\n            }\r\n\r\n            if (savedTerrain) {\r\n                setTimeout(() => {\r\n                    this.#mapControls.enableTerrain();\r\n                    // Note: Update NavigationPanel state here if needed\r\n                }, 800);\r\n            }\r\n\r\n            if (!labelsEnabled) {\r\n                setTimeout(() => {\r\n                    this.#mapControls.toggleMapLabels(false);\r\n                }, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    #onMapMoveEnd() {\r\n        if (this.#storage) {\r\n            // Assumes ncop_storage.saveMapState exists and takes the map instance\r\n            this.#storage.saveMapState(this.#map);\r\n        }\r\n    }\r\n}\r\n\r\n// Global Initialization\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    lucide.createIcons();\r\n\r\n    // REMOVED: setTimeout is no longer needed as the storage manager is initialized synchronously above.\r\n    new DashboardManager().init();\r\n});\r\n","// Local Storage Manager for NCOP Application\r\nclass NCOPStorageManager {\r\n    constructor() {\r\n        this.storagePrefix = 'ncop_';\r\n        this.currentUser = null;\r\n        this.defaultSettings = {\r\n            // Map Settings\r\n            mapStyle: 'streets-v12',\r\n            mapCenter: [74.3, 31.5], // Pakistan coordinates\r\n            mapZoom: 6,\r\n            mapBearing: 0,\r\n            mapPitch: 0,\r\n            labelsEnabled: true,\r\n            \r\n            // UI Settings\r\n            userPanelVisible: false,\r\n            basemapPanelVisible: false,\r\n            \r\n            // Theme Settings\r\n            theme: 'default',\r\n            \r\n            // User Preferences\r\n            autoSaveInterval: 30000, // 30 seconds\r\n            notifications: true,\r\n            \r\n            // Last Activity\r\n            lastLogin: null,\r\n            lastActivity: null,\r\n            sessionData: {}\r\n        };\r\n        \r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        // Get current user from Django context if available\r\n        if (window.USER_ID) {\r\n            this.currentUser = window.USER_ID;\r\n        }\r\n        \r\n        // Initialize user settings if they don't exist\r\n        this.initializeUserSettings();\r\n        \r\n        // Set up auto-save\r\n        this.setupAutoSave();\r\n        \r\n        console.log('🗄️ NCOP Storage Manager initialized for user:', this.currentUser);\r\n    }\r\n    \r\n    // Generate user-specific storage key\r\n    getUserKey(key) {\r\n        if (this.currentUser) {\r\n            return `${this.storagePrefix}user_${this.currentUser}_${key}`;\r\n        }\r\n        return `${this.storagePrefix}guest_${key}`;\r\n    }\r\n    \r\n    // Initialize user settings with defaults\r\n    initializeUserSettings() {\r\n        const settings = this.getAllSettings();\r\n        if (!settings || Object.keys(settings).length === 0) {\r\n            this.saveAllSettings(this.defaultSettings);\r\n            console.log('📝 Initialized default settings for user');\r\n        }\r\n    }\r\n    \r\n    // Save individual setting\r\n    saveSetting(key, value) {\r\n        try {\r\n            const storageKey = this.getUserKey(key);\r\n            localStorage.setItem(storageKey, JSON.stringify({\r\n                value: value,\r\n                timestamp: Date.now(),\r\n                user: this.currentUser\r\n            }));\r\n            console.log(`💾 Saved ${key}:`, value);\r\n        } catch (error) {\r\n            console.error('❌ Error saving to localStorage:', error);\r\n        }\r\n    }\r\n    \r\n    // Get individual setting\r\n    getSetting(key, defaultValue = null) {\r\n        try {\r\n            const storageKey = this.getUserKey(key);\r\n            const stored = localStorage.getItem(storageKey);\r\n            \r\n            if (stored) {\r\n                const parsed = JSON.parse(stored);\r\n                return parsed.value;\r\n            }\r\n            \r\n            // Return default from defaultSettings or provided default\r\n            return this.defaultSettings[key] !== undefined ? this.defaultSettings[key] : defaultValue;\r\n        } catch (error) {\r\n            console.error('❌ Error reading from localStorage:', error);\r\n            return this.defaultSettings[key] !== undefined ? this.defaultSettings[key] : defaultValue;\r\n        }\r\n    }\r\n    \r\n    // Save all settings at once\r\n    saveAllSettings(settings) {\r\n        Object.keys(settings).forEach(key => {\r\n            this.saveSetting(key, settings[key]);\r\n        });\r\n    }\r\n    \r\n    // Get all settings\r\n    getAllSettings() {\r\n        const settings = {};\r\n        Object.keys(this.defaultSettings).forEach(key => {\r\n            settings[key] = this.getSetting(key);\r\n        });\r\n        return settings;\r\n    }\r\n    \r\n    // Map-specific methods\r\n    saveMapState(mapInstance) {\r\n        const center = mapInstance.getCenter();\r\n        const zoom = mapInstance.getZoom();\r\n        const bearing = mapInstance.getBearing();\r\n        const pitch = mapInstance.getPitch();\r\n        \r\n        this.saveSetting('mapCenter', [center.lng, center.lat]);\r\n        this.saveSetting('mapZoom', zoom);\r\n        this.saveSetting('mapBearing', bearing);\r\n        this.saveSetting('mapPitch', pitch);\r\n        \r\n        console.log('🗺️ Map state saved');\r\n    }\r\n    \r\n    restoreMapState(mapInstance) {\r\n        const center = this.getSetting('mapCenter');\r\n        const zoom = this.getSetting('mapZoom');\r\n        const bearing = this.getSetting('mapBearing');\r\n        const pitch = this.getSetting('mapPitch');\r\n        \r\n        if (center && zoom !== null) {\r\n            mapInstance.jumpTo({\r\n                center: center,\r\n                zoom: zoom,\r\n                bearing: bearing,\r\n                pitch: pitch\r\n            });\r\n            console.log('🗺️ Map state restored');\r\n        }\r\n    }\r\n    \r\n    saveMapStyle(style) {\r\n        this.saveSetting('mapStyle', style);\r\n    }\r\n    \r\n    getMapStyle() {\r\n        return this.getSetting('mapStyle');\r\n    }\r\n    \r\n    saveLabelsState(enabled) {\r\n        this.saveSetting('labelsEnabled', enabled);\r\n    }\r\n    \r\n    getLabelsState() {\r\n        return this.getSetting('labelsEnabled');\r\n    }\r\n    \r\n    // UI State methods\r\n    saveUserPanelState(visible) {\r\n        this.saveSetting('userPanelVisible', visible);\r\n    }\r\n    \r\n    getUserPanelState() {\r\n        return this.getSetting('userPanelVisible');\r\n    }\r\n    \r\n    saveBasemapPanelState(visible) {\r\n        this.saveSetting('basemapPanelVisible', visible);\r\n    }\r\n    \r\n    getBasemapPanelState() {\r\n        return this.getSetting('basemapPanelVisible');\r\n    }\r\n    \r\n    // Session management\r\n    saveSessionData(key, value) {\r\n        const sessionData = this.getSetting('sessionData', {});\r\n        sessionData[key] = {\r\n            value: value,\r\n            timestamp: Date.now()\r\n        };\r\n        this.saveSetting('sessionData', sessionData);\r\n    }\r\n    \r\n    getSessionData(key) {\r\n        const sessionData = this.getSetting('sessionData', {});\r\n        return sessionData[key] ? sessionData[key].value : null;\r\n    }\r\n    \r\n    // Activity tracking\r\n    updateLastActivity() {\r\n        this.saveSetting('lastActivity', Date.now());\r\n    }\r\n    \r\n    updateLastLogin() {\r\n        this.saveSetting('lastLogin', Date.now());\r\n    }\r\n    \r\n    getLastActivity() {\r\n        return this.getSetting('lastActivity');\r\n    }\r\n    \r\n    getLastLogin() {\r\n        return this.getSetting('lastLogin');\r\n    }\r\n    \r\n    // Auto-save functionality\r\n    setupAutoSave() {\r\n        const interval = this.getSetting('autoSaveInterval', 30000);\r\n        \r\n        setInterval(() => {\r\n            this.updateLastActivity();\r\n        }, interval);\r\n        \r\n        // Save on page unload\r\n        window.addEventListener('beforeunload', () => {\r\n            this.updateLastActivity();\r\n        });\r\n    }\r\n    \r\n    // Clear user data\r\n    clearUserData() {\r\n        const keys = Object.keys(localStorage);\r\n        const userPrefix = this.getUserKey('');\r\n        \r\n        keys.forEach(key => {\r\n            if (key.startsWith(userPrefix.slice(0, -1))) { // Remove trailing underscore\r\n                localStorage.removeItem(key);\r\n            }\r\n        });\r\n        \r\n        console.log('🗑️ User data cleared');\r\n    }\r\n    \r\n    // Export settings for backup\r\n    exportSettings() {\r\n        const settings = this.getAllSettings();\r\n        const exportData = {\r\n            user: this.currentUser,\r\n            timestamp: Date.now(),\r\n            version: '1.0',\r\n            settings: settings\r\n        };\r\n        \r\n        return JSON.stringify(exportData, null, 2);\r\n    }\r\n    \r\n    // Import settings from backup\r\n    importSettings(jsonData) {\r\n        try {\r\n            const importData = JSON.parse(jsonData);\r\n            \r\n            if (importData.settings) {\r\n                this.saveAllSettings(importData.settings);\r\n                console.log('📥 Settings imported successfully');\r\n                return true;\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Error importing settings:', error);\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    // Get storage usage info\r\n    getStorageInfo() {\r\n        const keys = Object.keys(localStorage);\r\n        const userKeys = keys.filter(key => key.startsWith(this.getUserKey('')));\r\n        \r\n        let totalSize = 0;\r\n        userKeys.forEach(key => {\r\n            totalSize += localStorage.getItem(key).length;\r\n        });\r\n        \r\n        return {\r\n            totalKeys: userKeys.length,\r\n            totalSize: totalSize,\r\n            sizeKB: (totalSize / 1024).toFixed(2),\r\n            maxSize: '5-10MB (browser dependent)',\r\n            keys: userKeys\r\n        };\r\n    }\r\n    \r\n    // Check if localStorage is available\r\n    static isAvailable() {\r\n        try {\r\n            const test = '__localStorage_test__';\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default NCOPStorageManager;\r\n","// MapControls.js\r\n\r\n/**\r\n * Handles the Mapbox map instance and core map interactions (labels, projection, terrain).\r\n * Assumes mapboxgl and ncop_storage are available globally or managed by the caller.\r\n */\r\nexport class MapControls {\r\n    #map;\r\n    #storage;\r\n\r\n    constructor(mapInstance, storageInstance) {\r\n        this.#map = mapInstance;\r\n        this.#storage = storageInstance;\r\n    }\r\n\r\n    /**\r\n     * Toggles the visibility of symbol layers, typically used for map labels.\r\n     * @param {boolean} enabled - True to show labels, false to hide.\r\n     */\r\n    toggleMapLabels(enabled) {\r\n        const style = this.#map.getStyle();\r\n        if (style && style.layers) {\r\n            style.layers.forEach((layer) => {\r\n                // Target symbol layers with a text-field property\r\n                if (\r\n                    layer.type === \"symbol\" &&\r\n                    layer.layout &&\r\n                    layer.layout[\"text-field\"]\r\n                ) {\r\n                    this.#map.setLayoutProperty(\r\n                        layer.id,\r\n                        \"visibility\",\r\n                        enabled ? \"visible\" : \"none\"\r\n                    );\r\n                }\r\n            });\r\n        }\r\n        console.log(`🗺️ Map labels toggled: ${enabled ? \"visible\" : \"none\"}`);\r\n    }\r\n\r\n    /**\r\n     * Changes the map's projection and saves the preference.\r\n     * @param {string} projectionName - The Mapbox GL JS projection name.\r\n     */\r\n    changeMapProjection(projectionName) {\r\n        try {\r\n            this.#map.setProjection(projectionName);\r\n            console.log(`🌍 Changed projection to: ${projectionName}`);\r\n            if (this.#storage) {\r\n                this.#storage.saveSetting(\"mapProjection\", projectionName);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error changing projection:\", error);\r\n            this.#map.setProjection(\"mercator\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds Mapbox GL JS DEM source and enables 3D terrain.\r\n     */\r\n    enableTerrain() {\r\n        console.log(\"🏔️ Enabling 3D Terrain mode...\");\r\n        const DEM_SOURCE_ID = \"mapbox-dem\";\r\n\r\n        if (!this.#map.getSource(DEM_SOURCE_ID)) {\r\n            try {\r\n                this.#map.addSource(DEM_SOURCE_ID, {\r\n                    type: \"raster-dem\",\r\n                    url: \"mapbox://mapbox.mapbox-terrain-dem-v1\",\r\n                    tileSize: 512,\r\n                    maxzoom: 14,\r\n                });\r\n            } catch (error) {\r\n                console.warn(\"Error adding terrain source:\", error);\r\n            }\r\n        }\r\n\r\n        try {\r\n            this.#map.setTerrain({ source: DEM_SOURCE_ID, exaggeration: 1.5 });\r\n        } catch (error) {\r\n            console.warn(\"Error setting terrain:\", error);\r\n        }\r\n\r\n        this.#map.easeTo({\r\n            pitch: 80,\r\n            bearing: -17.6,\r\n            duration: 1000,\r\n        });\r\n\r\n        if (this.#storage) {\r\n            this.#storage.saveSetting(\"terrainEnabled\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes 3D terrain and returns to 2D view.\r\n     */\r\n    disableTerrain() {\r\n        console.log(\"🗺️ Switching to 2D mode...\");\r\n\r\n        try {\r\n            this.#map.setTerrain(null);\r\n        } catch (error) {\r\n            console.warn(\"Error removing terrain:\", error);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            try {\r\n                if (this.#map.getSource(\"mapbox-dem\")) {\r\n                    this.#map.removeSource(\"mapbox-dem\");\r\n                }\r\n            } catch (error) {\r\n                console.warn(\"Error removing terrain source:\", error);\r\n            }\r\n        }, 200);\r\n\r\n        const currentProjection = this.#storage\r\n            ? this.#storage.getSetting(\"mapProjection\") || \"mercator\"\r\n            : \"mercator\";\r\n\r\n        this.#map.easeTo({\r\n            pitch: 0,\r\n            bearing: 0,\r\n            duration: 1000,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            try {\r\n                this.#map.setProjection(currentProjection);\r\n                console.log(\"🌍 Projection restored to:\", currentProjection);\r\n            } catch (error) {\r\n                console.warn(\"Error setting projection:\", error);\r\n                this.#map.setProjection(\"mercator\");\r\n            }\r\n        }, 1200);\r\n\r\n        if (this.#storage) {\r\n            this.#storage.saveSetting(\"terrainEnabled\", false);\r\n        }\r\n    }\r\n}\r\n","// NavigationPanel.js\r\nimport { MapControls } from \"./map-controls.js\";\r\n\r\n/**\r\n * Handles the bottom-right map navigation controls (zoom, bearing, 3D toggle, locate, home).\r\n * Assumes mapboxgl is globally available for Marker functionality.\r\n */\r\nexport class NavigationPanel {\r\n    #map;\r\n    #mapControls;\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     * @param {ProjectionPanel} projectionPanelInstance - Must be passed for projection button\r\n     */\r\n    constructor(mapInstance, mapControlsInstance, projectionPanelInstance) {\r\n        this.#map = mapInstance;\r\n        this.#mapControls = mapControlsInstance;\r\n        this.projectionPanel = projectionPanelInstance; // Store reference\r\n        this.render();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    /**\r\n     * Renders the custom navigation controls HTML into the map container.\r\n     */\r\n    render() {\r\n        const mapContainer = document.getElementById(\"map\");\r\n        const navWrapper = document.createElement(\"div\");\r\n        navWrapper.className = \"nav-controls-wrapper\";\r\n        navWrapper.innerHTML = `\r\n            <div class=\"custom-nav-control\" id=\"navControlsContainer\">\r\n                <button id=\"zoomIn\" class=\"custom-nav-btn\" title=\"Zoom In\"><i data-lucide=\"plus\"></i></button>\r\n                <button id=\"zoomOut\" class=\"custom-nav-btn\" title=\"Zoom Out\"><i data-lucide=\"minus\"></i></button>\r\n                <button id=\"resetBearing\" class=\"custom-nav-btn\" title=\"Reset Bearing\"><i data-lucide=\"compass\"></i></button>\r\n                <button id=\"toggle3D\" class=\"custom-nav-btn\" title=\"Switch to 3D View (2D Mode)\">\r\n                    <span class=\"nav-text\">3D</span>\r\n                </button>\r\n                <button id=\"projectionSwitch\" class=\"custom-nav-btn\" title=\"Map Projections\"><i data-lucide=\"earth\"></i></button>\r\n                <button id=\"locate\" class=\"custom-nav-btn\" title=\"Find My Location\"><i data-lucide=\"map-pin\"></i></button>\r\n                <button id=\"homeExtent\" class=\"custom-nav-btn\" title=\"Zoom to Pakistan\"><i data-lucide=\"house\"></i></button>\r\n                <button id=\"navToggleBtn\" class=\"nav-toggle-btn\" title=\"Toggle Navigation Controls\"><i data-lucide=\"chevron-left\"></i></button>\r\n            </div>\r\n        `;\r\n        mapContainer.appendChild(navWrapper);\r\n        lucide.createIcons();\r\n        this.restoreToggle3DState(\r\n            window.ncop_storage?.getSetting(\"terrainEnabled\")\r\n        );\r\n    }\r\n\r\n    addEventListeners() {\r\n        document\r\n            .getElementById(\"navToggleBtn\")\r\n            ?.addEventListener(\"click\", this.#handleNavToggle.bind(this));\r\n        document\r\n            .getElementById(\"zoomIn\")\r\n            ?.addEventListener(\"click\", () => this.#map.zoomIn({ duration: 300 }));\r\n        document\r\n            .getElementById(\"zoomOut\")\r\n            ?.addEventListener(\"click\", () => this.#map.zoomOut({ duration: 300 }));\r\n        document\r\n            .getElementById(\"resetBearing\")\r\n            ?.addEventListener(\"click\", this.#handleResetBearing.bind(this));\r\n        document\r\n            .getElementById(\"toggle3D\")\r\n            ?.addEventListener(\"click\", this.#handleToggle3D.bind(this));\r\n\r\n        // Use the injected ProjectionPanel instance\r\n        document\r\n            .getElementById(\"projectionSwitch\")\r\n            ?.addEventListener(\"click\", () => this.projectionPanel.togglePanel());\r\n\r\n        document\r\n            .getElementById(\"locate\")\r\n            ?.addEventListener(\"click\", this.#handleLocate.bind(this));\r\n        document\r\n            .getElementById(\"homeExtent\")\r\n            ?.addEventListener(\"click\", this.#handleHomeExtent.bind(this));\r\n    }\r\n\r\n    #handleNavToggle() {\r\n        const navControlsContainer = document.getElementById(\r\n            \"navControlsContainer\"\r\n        );\r\n        const isCollapsed = navControlsContainer.classList.toggle(\"collapsed\");\r\n        const toggleIcon = document\r\n            .getElementById(\"navToggleBtn\")\r\n            ?.querySelector(\"i\");\r\n\r\n        if (toggleIcon) {\r\n            toggleIcon.setAttribute(\r\n                \"data-lucide\",\r\n                isCollapsed ? \"chevron-right\" : \"chevron-left\"\r\n            );\r\n            lucide.createIcons();\r\n        }\r\n    }\r\n\r\n    #handleResetBearing() {\r\n        this.#map.easeTo({ bearing: 0, pitch: 0, duration: 500 });\r\n    }\r\n\r\n    #handleToggle3D() {\r\n        const toggle3DButton = document.getElementById(\"toggle3D\");\r\n        const currentTerrain =\r\n            window.ncop_storage?.getSetting(\"terrainEnabled\") || false;\r\n        const newTerrainState = !currentTerrain;\r\n\r\n        if (newTerrainState) {\r\n            this.#mapControls.enableTerrain();\r\n        } else {\r\n            this.#mapControls.disableTerrain();\r\n        }\r\n        this.restoreToggle3DState(newTerrainState);\r\n    }\r\n\r\n    #handleLocate() {\r\n        const targetCoords = [73.09896723226383, 33.681421388232]; // Islamabad\r\n        this.#map.flyTo({ center: targetCoords, zoom: 14, duration: 2000 });\r\n        new mapboxgl.Marker({ color: \"#ff0000\" })\r\n            .setLngLat(targetCoords)\r\n            .addTo(this.#map);\r\n        console.log(\"🎯 Zoomed to target location:\", targetCoords);\r\n    }\r\n\r\n    #handleHomeExtent() {\r\n        const pakistanCenter = [69.3451, 30.3753];\r\n        this.#map.flyTo({\r\n            center: pakistanCenter,\r\n            zoom: 5,\r\n            duration: 2000,\r\n            essential: true,\r\n        });\r\n        console.log(\"🏠 Zoomed to Pakistan extent\");\r\n    }\r\n\r\n    /**\r\n     * Updates the 3D toggle button state.\r\n     * @param {boolean} terrainEnabled - The saved terrain state.\r\n     */\r\n    restoreToggle3DState(terrainEnabled) {\r\n        const button = document.getElementById(\"toggle3D\");\r\n        if (button) {\r\n            if (terrainEnabled) {\r\n                button.title = \"Switch to 2D View (3D Mode)\";\r\n                button.classList.add(\"terrain-active\");\r\n            } else {\r\n                button.title = \"Switch to 3D View (2D Mode)\";\r\n                button.classList.remove(\"terrain-active\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","// ProjectionPanel.js\r\nimport { MapControls } from \"./map-controls.js\";\r\n\r\n/**\r\n * Handles the logic for the map projection selection panel.\r\n */\r\nexport class ProjectionPanel {\r\n    #map;\r\n    #mapControls;\r\n    #panel;\r\n    #storage = window.ncop_storage;\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     */\r\n    constructor(mapInstance, mapControlsInstance) {\r\n        this.#map = mapInstance;\r\n        this.#mapControls = mapControlsInstance;\r\n        this.render();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    /**\r\n     * Renders the projection panel HTML.\r\n     */\r\n    render() {\r\n        const mapContainer = document.getElementById(\"map\");\r\n        const savedProjection = this.#storage\r\n            ? this.#storage.getSetting(\"mapProjection\")\r\n            : \"mercator\";\r\n\r\n        const projections = [\r\n            {\r\n                key: \"mercator\",\r\n                name: \"Mercator\",\r\n                desc: \"Standard web map projection\",\r\n                emoji: \"🌍\",\r\n            },\r\n            { key: \"globe\", name: \"Globe\", desc: \"3D globe view\", emoji: \"🌐\" },\r\n            {\r\n                key: \"albers\",\r\n                name: \"Albers\",\r\n                desc: \"Equal-area conic projection\",\r\n                emoji: \"🗺️\",\r\n            },\r\n            {\r\n                key: \"equalEarth\",\r\n                name: \"Equal Earth\",\r\n                desc: \"Equal-area pseudocylindrical\",\r\n                emoji: \"🌎\",\r\n            },\r\n            {\r\n                key: \"naturalEarth\",\r\n                name: \"Natural Earth\",\r\n                desc: \"Compromise pseudocylindrical\",\r\n                emoji: \"🌏\",\r\n            },\r\n            {\r\n                key: \"winkelTripel\",\r\n                name: \"Winkel Tripel\",\r\n                desc: \"Modified azimuthal projection\",\r\n                emoji: \"🗺️\",\r\n            },\r\n        ];\r\n\r\n        this.#panel = document.createElement(\"div\");\r\n        this.#panel.id = \"projectionPanel\";\r\n        this.#panel.className = \"projection-panel\";\r\n        this.#panel.innerHTML = `\r\n            <div class=\"projection-header\">\r\n                <h3>Map Projections</h3>\r\n                <button id=\"projectionClose\" class=\"projection-close-btn\"><i data-lucide=\"x\"></i></button>\r\n            </div>\r\n            <div class=\"projection-list\">\r\n                ${projections\r\n                .map(\r\n                    (p) => `\r\n                    <div class=\"projection-item ${p.key === savedProjection ? \"active\" : \"\"\r\n                        }\" data-projection=\"${p.key}\">\r\n                        <div class=\"projection-preview\">${p.emoji}</div>\r\n                        <div class=\"projection-info\">\r\n                            <div class=\"projection-name\">${p.name}</div>\r\n                            <div class=\"projection-desc\">${p.desc}</div>\r\n                        </div>\r\n                    </div>\r\n                `\r\n                )\r\n                .join(\"\")}\r\n            </div>\r\n        `;\r\n\r\n        mapContainer.appendChild(this.#panel);\r\n        lucide.createIcons();\r\n    }\r\n\r\n    addEventListeners() {\r\n        document\r\n            .getElementById(\"projectionClose\")\r\n            ?.addEventListener(\"click\", () => {\r\n                this.#panel.classList.remove(\"visible\");\r\n            });\r\n\r\n        this.#panel.querySelectorAll(\".projection-item\").forEach((item) => {\r\n            item.addEventListener(\r\n                \"click\",\r\n                this.#handleProjectionSelection.bind(this, item)\r\n            );\r\n        });\r\n\r\n        document.addEventListener(\"click\", this.#handleOutsideClick.bind(this));\r\n    }\r\n\r\n    #handleProjectionSelection(item) {\r\n        const projection = item.dataset.projection;\r\n        this.#mapControls.changeMapProjection(projection);\r\n\r\n        this.#panel\r\n            .querySelectorAll(\".projection-item\")\r\n            .forEach((i) => i.classList.remove(\"active\"));\r\n        item.classList.add(\"active\");\r\n\r\n        setTimeout(() => {\r\n            this.#panel.classList.remove(\"visible\");\r\n        }, 500);\r\n    }\r\n\r\n    updateActiveProjection() {\r\n        const currentProjection = this.#storage\r\n            ? this.#storage.getSetting(\"mapProjection\") || \"mercator\"\r\n            : \"mercator\";\r\n\r\n        this.#panel.querySelectorAll(\".projection-item\").forEach((item) => {\r\n            item.classList.remove(\"active\");\r\n            if (item.dataset.projection === currentProjection) {\r\n                item.classList.add(\"active\");\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggles the visibility of the projection panel.\r\n     */\r\n    togglePanel() {\r\n        if (this.#panel) {\r\n            if (!this.#panel.classList.contains(\"visible\")) {\r\n                this.updateActiveProjection();\r\n            }\r\n            this.#panel.classList.toggle(\"visible\");\r\n        }\r\n    }\r\n\r\n    #handleOutsideClick(event) {\r\n        const projectionSwitchBtn = document.getElementById(\"projectionSwitch\");\r\n        if (\r\n            !this.#panel.contains(event.target) &&\r\n            !projectionSwitchBtn.contains(event.target)\r\n        ) {\r\n            this.#panel.classList.remove(\"visible\");\r\n        }\r\n    }\r\n}\r\n","// BasemapPanel.js\r\nimport { MapControls } from \"./map-controls.js\";\r\n\r\n/**\r\n * Handles the top-right basemap/style and labels control.\r\n */\r\nexport class BasemapPanel {\r\n    #map;\r\n    #storage = window.ncop_storage;\r\n    #mapControls;\r\n    #basemapStyles = [\r\n        // ... (Styles array remains the same as in the original structure)\r\n        { id: \"streets-v12\", name: \"Streets\", emoji: \"🏙️\" },\r\n        { id: \"satellite-streets-v12\", name: \"Satellite\", emoji: \"🛰️\" },\r\n        { id: \"outdoors-v12\", name: \"Outdoors\", emoji: \"🏔️\" },\r\n        { id: \"light-v11\", name: \"Light\", emoji: \"☀️\" },\r\n        { id: \"dark-v11\", name: \"Dark\", emoji: \"🌙\" },\r\n        { id: \"satellite-v9\", name: \"Satellite Only\", emoji: \"📡\" },\r\n        { id: \"navigation-day-v1\", name: \"Navigation Day\", emoji: \"🗺️\" },\r\n        { id: \"navigation-night-v1\", name: \"Navigation Night\", emoji: \"🌃\" },\r\n    ];\r\n    #currentStyle;\r\n    #labelsEnabled;\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} mapInstance\r\n     * @param {MapControls} mapControlsInstance\r\n     */\r\n    constructor(mapInstance, mapControlsInstance) {\r\n        this.#map = mapInstance;\r\n        this.#mapControls = mapControlsInstance;\r\n        this.#currentStyle = this.#storage\r\n            ? this.#storage.getMapStyle()\r\n            : \"streets-v12\";\r\n        this.#labelsEnabled = this.#storage ? this.#storage.getLabelsState() : true;\r\n        this.render();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    render() {\r\n        const mapContainer = document.getElementById(\"map\");\r\n        const basemapContainer = document.createElement(\"div\");\r\n        basemapContainer.className = \"custom-basemap-control\";\r\n        basemapContainer.innerHTML = `\r\n            <button id=\"basemapToggle\" class=\"custom-basemap-btn\" title=\"Change Basemap\">\r\n                <i data-lucide=\"layers\"></i>\r\n            </button>\r\n            <div id=\"basemapPanel\" class=\"basemap-panel\">\r\n                <div class=\"labels-toggle\">\r\n                    <span class=\"labels-toggle-text\">Show Labels</span>\r\n                    <div class=\"toggle-switch ${this.#labelsEnabled ? \"active\" : \"\"\r\n            }\" id=\"labelsToggle\">\r\n                        <div class=\"toggle-slider\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"basemap-list\" id=\"basemapList\">\r\n                    ${this.#basemapStyles\r\n                .map(\r\n                    (style) => `\r\n                        <div class=\"basemap-item ${style.id === this.#currentStyle ? \"active\" : \"\"\r\n                        }\" data-style=\"${style.id}\">\r\n                            <div class=\"basemap-image\">${style.emoji}</div>\r\n                            <span class=\"basemap-name\">${style.name}</span>\r\n                        </div>\r\n                    `\r\n                )\r\n                .join(\"\")}\r\n                </div>\r\n            </div>\r\n        `;\r\n        mapContainer.appendChild(basemapContainer);\r\n        lucide.createIcons();\r\n    }\r\n\r\n    addEventListeners() {\r\n        const basemapToggle = document.getElementById(\"basemapToggle\");\r\n        const basemapPanel = document.getElementById(\"basemapPanel\");\r\n        const labelsToggle = document.getElementById(\"labelsToggle\");\r\n        const basemapList = document.getElementById(\"basemapList\");\r\n\r\n        basemapToggle?.addEventListener(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            basemapPanel.classList.toggle(\"visible\");\r\n        });\r\n\r\n        labelsToggle?.addEventListener(\r\n            \"click\",\r\n            this.#handleLabelsToggle.bind(this)\r\n        );\r\n        basemapList?.addEventListener(\r\n            \"click\",\r\n            this.#handleBasemapSelection.bind(this)\r\n        );\r\n        document.addEventListener(\"click\", this.#handleOutsideClick.bind(this));\r\n\r\n        const userPanel = document.getElementById(\"userPanel\");\r\n        if (userPanel) {\r\n            this.#observeUserPanel(userPanel);\r\n        }\r\n    }\r\n\r\n    #handleLabelsToggle() {\r\n        this.#labelsEnabled = !this.#labelsEnabled;\r\n        const labelsToggle = document.getElementById(\"labelsToggle\");\r\n        labelsToggle.classList.toggle(\"active\", this.#labelsEnabled);\r\n\r\n        if (this.#storage) {\r\n            this.#storage.saveLabelsState(this.#labelsEnabled);\r\n        }\r\n\r\n        this.#mapControls.toggleMapLabels(this.#labelsEnabled);\r\n    }\r\n\r\n    #handleBasemapSelection(event) {\r\n        const basemapItem = event.target.closest(\".basemap-item\");\r\n        if (basemapItem) {\r\n            const newStyle = basemapItem.dataset.style;\r\n            const basemapPanel = document.getElementById(\"basemapPanel\");\r\n\r\n            document.querySelectorAll(\".basemap-item\").forEach((item) => {\r\n                item.classList.remove(\"active\");\r\n            });\r\n            basemapItem.classList.add(\"active\");\r\n\r\n            this.#map.setStyle(`mapbox://styles/mapbox/${newStyle}`);\r\n            this.#currentStyle = newStyle;\r\n\r\n            if (this.#storage) {\r\n                this.#storage.saveMapStyle(newStyle);\r\n            }\r\n\r\n            basemapPanel.classList.remove(\"visible\");\r\n\r\n            // Reapply labels setting after style loads\r\n            this.#map.once(\"styledata\", () => {\r\n                if (!this.#labelsEnabled) {\r\n                    this.#mapControls.toggleMapLabels(false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    #handleOutsideClick(event) {\r\n        const basemapToggle = document.getElementById(\"basemapToggle\");\r\n        const basemapPanel = document.getElementById(\"basemapPanel\");\r\n        if (\r\n            !basemapPanel.contains(event.target) &&\r\n            !basemapToggle.contains(event.target)\r\n        ) {\r\n            basemapPanel.classList.remove(\"visible\");\r\n        }\r\n    }\r\n\r\n    #observeUserPanel(userPanel) {\r\n        const basemapContainer = document.querySelector(\".custom-basemap-control\");\r\n        const basemapPanel = document.getElementById(\"basemapPanel\");\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (\r\n                    mutation.type === \"attributes\" &&\r\n                    mutation.attributeName === \"class\"\r\n                ) {\r\n                    if (userPanel.classList.contains(\"user-panel-visible\")) {\r\n                        basemapContainer.classList.add(\"panel-open\");\r\n                        basemapPanel.classList.remove(\"visible\");\r\n                    } else {\r\n                        basemapContainer.classList.remove(\"panel-open\");\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        observer.observe(userPanel, { attributes: true });\r\n    }\r\n}\r\n","// SidebarMenu.js\r\n\r\n/**\r\n * Handles the main sidebar logic, including configuration loading, UI generation (accordions),\r\n * search, and NCOP control state management.\r\n */\r\nexport class SidebarMenu {\r\n    #sidebarPanel;\r\n    #menuControlDiv;\r\n    #accordionContainer;\r\n    #storage = window.ncop_storage;    constructor() {\r\n        console.log(\"🚀 SidebarMenu constructor called\");\r\n        \r\n        this.renderButton();\r\n        console.log(\"✅ Button rendered\");\r\n        \r\n        this.#sidebarPanel = document.getElementById(\"sidebarPanel\");\r\n        console.log(\"🔍 Sidebar panel:\", this.#sidebarPanel);\r\n        \r\n        this.#accordionContainer = this.#sidebarPanel?.querySelector(\r\n            \".accordion-container\"\r\n        );\r\n        console.log(\"🔍 Accordion container:\", this.#accordionContainer);\r\n        \r\n        this.loadSidebarConfig();\r\n        console.log(\"✅ Config loading started\");\r\n        \r\n        this.addEventListeners();\r\n        console.log(\"✅ Event listeners added\");\r\n        \r\n        console.log(\"📋 Sidebar menu initialized\");\r\n    }\r\n\r\n    renderButton() {\r\n        const mapContainer = document.getElementById(\"map\");\r\n        this.#menuControlDiv = document.createElement(\"div\");\r\n        this.#menuControlDiv.className = \"custom-menu-control\";\r\n        this.#menuControlDiv.innerHTML = `\r\n            <button id=\"menuToggle\" class=\"custom-menu-btn\" title=\"Open Menu\">\r\n                <i data-lucide=\"menu\"></i>\r\n            </button>\r\n        `;\r\n        mapContainer.appendChild(this.#menuControlDiv);\r\n        lucide.createIcons();\r\n    }\r\n\r\n    addEventListeners() {\r\n        document\r\n            .getElementById(\"menuToggle\")\r\n            ?.addEventListener(\"click\", this.openSidebar.bind(this));\r\n        document\r\n            .getElementById(\"sidebarCloseBtn\")\r\n            ?.addEventListener(\"click\", this.closeSidebar.bind(this));\r\n        document.addEventListener(\"keydown\", this.#handleKeydown.bind(this));\r\n    }\r\n\r\n    openSidebar() {\r\n        this.#sidebarPanel?.classList.add(\"visible\");\r\n        this.#menuControlDiv?.classList.add(\"hidden\");\r\n    }\r\n\r\n    closeSidebar() {\r\n        this.#sidebarPanel?.classList.remove(\"visible\");\r\n        this.#menuControlDiv?.classList.remove(\"hidden\");\r\n    }\r\n\r\n    #handleKeydown(event) {\r\n        if (\r\n            event.key === \"Escape\" &&\r\n            this.#sidebarPanel?.classList.contains(\"visible\")\r\n        ) {\r\n            this.closeSidebar();\r\n        }\r\n    }\r\n\r\n    // --- Configuration Loading and Population ---\r\n      async loadSidebarConfig() {\r\n        try {\r\n            console.log(\"🔍 Starting to import map-layers.js...\");\r\n            \r\n            // Import the menu configuration from map-layers.js\r\n            const { ncop_menu_items } = await import('./map-layers.js');\r\n            \r\n            console.log(\"📋 Import successful! Menu configuration:\", ncop_menu_items);\r\n            console.log(\"📋 Available categories:\", Object.keys(ncop_menu_items || {}));\r\n\r\n            if (ncop_menu_items && Object.keys(ncop_menu_items).length > 0) {\r\n                console.log(\"✅ Starting sidebar population...\");\r\n                this.#populateNCOPSidebar(ncop_menu_items);\r\n            } else {\r\n                console.warn(\"⚠️ ncop_menu_items is empty or undefined, using basic sidebar\");\r\n                this.#createBasicSidebar();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"❌ Error loading NCOP menu configuration:\", error);\r\n            console.error(\"❌ Error details:\", error.message, error.stack);\r\n            this.#createBasicSidebar();\r\n        }\r\n    }\r\n\r\n    #populateNCOPSidebar(menuData) {\r\n        if (!this.#accordionContainer) return;\r\n\r\n        this.#accordionContainer.innerHTML = \"\";\r\n\r\n        Object.keys(menuData).forEach((categoryKey) => {\r\n            const categoryData = menuData[categoryKey];\r\n            const categoryElement = this.#createNCOPCategorySection(\r\n                categoryKey,\r\n                categoryData\r\n            );\r\n            this.#accordionContainer.appendChild(categoryElement);\r\n        });\r\n\r\n        lucide.createIcons();\r\n        this.#initializeAccordionHandlers();\r\n        this.#initializeSearchFunctionality();\r\n\r\n        // Restore NCOP control states after UI is ready\r\n        setTimeout(() => {\r\n            this.#restoreNCOPStates();\r\n        }, 100);\r\n    }\r\n\r\n    // --- Sidebar UI Generation ---\r\n\r\n    #getCategoryConfig(categoryKey) {\r\n        const categoryConfig = {\r\n            gis_layers: {\r\n                title: \"GIS Layers\",\r\n                icon: \"layers\",\r\n                customIcon: \"/static/icons/accordion_icons/gis-layers.webp\",\r\n            },\r\n            weather: {\r\n                title: \"Weather Systems\",\r\n                icon: \"cloud\",\r\n                customIcon: \"/static/icons/accordion_icons/weather-systems.webp\",\r\n            },\r\n            flood: {\r\n                title: \"Flood Monitoring\",\r\n                icon: \"waves\",\r\n                customIcon: \"/static/icons/accordion_icons/flood.webp\",\r\n            },\r\n            air_quality: {\r\n                title: \"Air Quality\",\r\n                icon: \"wind\",\r\n                customIcon: \"/static/icons/accordion_icons/air-quality.webp\",\r\n            },\r\n            \"ocean/coastal\": {\r\n                title: \"Ocean & Coastal\",\r\n                icon: \"anchor\",\r\n                customIcon: \"/static/icons/accordion_icons/ocean-coastal.webp\",\r\n            },\r\n            \"Disaster Early Warning (DEW)\": {\r\n                title: \"Early Warning\",\r\n                icon: \"alert-triangle\",\r\n                customIcon: \"/static/icons/accordion_icons/early-warning.webp\",\r\n            },\r\n        };\r\n        return (\r\n            categoryConfig[categoryKey] || {\r\n                title: categoryKey\r\n                    .replace(/_/g, \" \")\r\n                    .replace(/\\b\\w/g, (l) => l.toUpperCase()),\r\n                icon: \"folder\",\r\n            }\r\n        );\r\n    }\r\n\r\n    #createNCOPCategorySection(categoryKey, categoryData) {\r\n        const sectionDiv = document.createElement(\"div\");\r\n        sectionDiv.className = \"accordion-item\";\r\n        const config = this.#getCategoryConfig(categoryKey);\r\n\r\n        const iconHtml = config.customIcon\r\n            ? `<img src=\"${config.customIcon}\" alt=\"${config.title}\" class=\"accordion-custom-icon\">`\r\n            : `<i data-lucide=\"${config.icon}\" class=\"accordion-icon\"></i>`;\r\n\r\n        const header = document.createElement(\"div\");\r\n        header.className = \"accordion-header\";\r\n        header.innerHTML = `${iconHtml}<span class=\"accordion-title\">${config.title}</span><i data-lucide=\"chevron-down\" class=\"accordion-chevron\"></i>`;\r\n\r\n        const content = document.createElement(\"div\");\r\n        content.className = \"accordion-content\";\r\n\r\n        Object.keys(categoryData).forEach((subcategoryKey) => {\r\n            const subcategoryData = categoryData[subcategoryKey];\r\n            content.appendChild(\r\n                this.#createNCOPSubcategorySection(subcategoryKey, subcategoryData)\r\n            );\r\n        });\r\n\r\n        sectionDiv.appendChild(header);\r\n        sectionDiv.appendChild(content);\r\n        return sectionDiv;\r\n    }\r\n\r\n    #createNCOPSubcategorySection(subcategoryKey, subcategoryData) {\r\n        const subcategoryDiv = document.createElement(\"div\");\r\n        subcategoryDiv.className = \"ncop-subcategory\";\r\n\r\n        const subcategoryHeader = document.createElement(\"div\");\r\n        subcategoryHeader.className = \"ncop-subcategory-header\";\r\n        subcategoryHeader.innerHTML = `<span>${subcategoryKey}</span><i data-lucide=\"chevron-right\" class=\"subcategory-chevron\"></i>`;        const itemsContainer = document.createElement(\"div\");\r\n        itemsContainer.className = \"ncop-items-container\";\r\n        \r\n        // --- Render items by type: toggle, temporal, dropdown, button ---\r\n        console.log(`🔍 Rendering subcategory: ${subcategoryKey}`, subcategoryData);\r\n        \r\n        Object.keys(subcategoryData).forEach((typeKey) => {\r\n            const items = subcategoryData[typeKey];\r\n            console.log(`🔍 Processing type: ${typeKey}`, items);\r\n            \r\n            // --- TOGGLE CASE ---\r\n            // JSON: { toggle: { itemKey: { label: ... }, ... } }\r\n            // HTML: label + switch\r\n            if (typeKey === \"toggle\") {\r\n                console.log(`✅ Creating toggle items for ${typeKey}:`, Object.keys(items));\r\n                Object.keys(items).forEach((itemKey) => {\r\n                    console.log(`🔍 Creating toggle item: ${itemKey}`, items[itemKey]);\r\n                    const toggleElement = this.#createToggleItem(itemKey, items[itemKey]);\r\n                    if (toggleElement) {\r\n                        console.log(`✅ Created toggle element:`, toggleElement);\r\n                        itemsContainer.appendChild(toggleElement);\r\n                    } else {\r\n                        console.error(`❌ Failed to create toggle element for ${itemKey}`);\r\n                    }\r\n                });\r\n            }\r\n            // --- TEMPORAL CASE ---\r\n            // JSON: { temporal: { itemKey: { label: ..., image: ... }, ... } }\r\n            // HTML: 2-col grid, image + label\r\n            else if (typeKey === \"temporal\") {\r\n                console.log(`✅ Creating temporal items for ${typeKey}:`, Object.keys(items));\r\n                const grid = document.createElement(\"div\");\r\n                grid.className = \"ncop-grid\";\r\n                Object.keys(items).forEach((itemKey) => {\r\n                    console.log(`🔍 Creating temporal item: ${itemKey}`, items[itemKey]);\r\n                    const temporalElement = this.#createTemporalItem(itemKey, items[itemKey]);\r\n                    if (temporalElement) {\r\n                        console.log(`✅ Created temporal element:`, temporalElement);\r\n                        grid.appendChild(temporalElement);\r\n                    } else {\r\n                        console.error(`❌ Failed to create temporal element for ${itemKey}`);\r\n                    }\r\n                });\r\n                itemsContainer.appendChild(grid);\r\n            }\r\n            // --- DROPDOWN CASE ---\r\n            // JSON: { dropdown: { endpoint: ..., key: ..., attribute: ... } }\r\n            // HTML: async select, populated from endpoint\r\n            // Only dropdowns use endpoint/key/attribute\r\n            else if (typeKey === \"dropdown\") {\r\n                console.log(`✅ Creating dropdown item for ${typeKey}:`, items);\r\n                const dropdownElement = this.#createDropdownItem(typeKey, items);\r\n                if (dropdownElement) {\r\n                    console.log(`✅ Created dropdown element:`, dropdownElement);\r\n                    itemsContainer.appendChild(dropdownElement);\r\n                } else {\r\n                    console.error(`❌ Failed to create dropdown element for ${typeKey}`);\r\n                }\r\n            }\r\n            // --- BUTTON CASE ---\r\n            // JSON: { button: { itemKey: { label: ..., color: ..., outline: ... }, ... } }\r\n            // HTML: colored, rounded button grid\r\n            else if (typeKey === \"button\") {\r\n                console.log(`✅ Creating button items for ${typeKey}:`, Object.keys(items));\r\n                const grid = document.createElement(\"div\");\r\n                grid.className = \"ncop-grid\";\r\n                Object.keys(items).forEach((itemKey) => {\r\n                    console.log(`🔍 Creating button item: ${itemKey}`, items[itemKey]);\r\n                    const buttonElement = this.#createButtonItem(itemKey, items[itemKey]);\r\n                    if (buttonElement) {\r\n                        console.log(`✅ Created button element:`, buttonElement);\r\n                        grid.appendChild(buttonElement);\r\n                    } else {\r\n                        console.error(`❌ Failed to create button element for ${itemKey}`);\r\n                    }\r\n                });\r\n                itemsContainer.appendChild(grid);\r\n            }\r\n            // --- OTHER CASES ---\r\n            // If new types are added in map-layers.js, add their logic here.\r\n            else {\r\n                console.warn(`⚠️ Unknown item type: ${typeKey}`, items);\r\n            }\r\n        });\r\n\r\n        subcategoryHeader.addEventListener(\"click\", function () {\r\n            const isExpanded = this.classList.contains(\"expanded\");\r\n            const parentContent = this.closest(\".accordion-content\");\r\n            const otherHeaders = parentContent?.querySelectorAll(\r\n                \".ncop-subcategory-header\"\r\n            );\r\n\r\n            otherHeaders?.forEach((header) => {\r\n                if (header !== this) {\r\n                    header.classList.remove(\"expanded\");\r\n                    header.nextElementSibling?.classList.remove(\"visible\");\r\n                }\r\n            });\r\n\r\n            if (!isExpanded) {\r\n                this.classList.add(\"expanded\");\r\n                itemsContainer.classList.add(\"visible\");\r\n            } else {\r\n                this.classList.remove(\"expanded\");\r\n                itemsContainer.classList.remove(\"visible\");\r\n            }\r\n        });\r\n\r\n        subcategoryDiv.appendChild(subcategoryHeader);\r\n        subcategoryDiv.appendChild(itemsContainer);        return subcategoryDiv;\r\n    }\r\n\r\n    #createToggleItem(itemKey, itemData) {\r\n        console.log(`🔧 Creating toggle item: ${itemKey}`, itemData);\r\n        \r\n        if (!itemData || !itemData.label) {\r\n            console.error(`❌ Invalid toggle item data for ${itemKey}:`, itemData);\r\n            return null;\r\n        }\r\n        \r\n        const itemDiv = document.createElement(\"div\");\r\n        itemDiv.className = \"ncop-item ncop-item-toggle\";\r\n        itemDiv.innerHTML = `\r\n            <span class=\"ncop-item-label\">${itemData.label}</span>\r\n            <label class=\"ncop-toggle\">\r\n                <input type=\"checkbox\" data-item-key=\"${itemKey}\">\r\n                <span class=\"ncop-toggle-slider\"></span>\r\n            </label>\r\n        `;\r\n        \r\n        console.log(`✅ Toggle item created successfully:`, itemDiv);\r\n        return itemDiv;\r\n    }\r\n\r\n    #createTemporalItem(itemKey, itemData) {\r\n        console.log(`🔧 Creating temporal item: ${itemKey}`, itemData);\r\n        \r\n        if (!itemData || !itemData.label) {\r\n            console.error(`❌ Invalid temporal item data for ${itemKey}:`, itemData);\r\n            return null;\r\n        }\r\n        \r\n        const itemDiv = document.createElement(\"div\");\r\n        itemDiv.className = \"ncop-item ncop-item-temporal\";\r\n        itemDiv.innerHTML = `\r\n            <div class=\"ncop-item-image\">\r\n                <img src=\"${itemData.image || '/static/images/placeholder.png'}\" alt=\"${itemData.label}\" />\r\n            </div>\r\n            <span class=\"ncop-item-label\">${itemData.label}</span>\r\n        `;\r\n        \r\n        // Add click handler for image selection\r\n        const imageElement = itemDiv.querySelector('.ncop-item-image');\r\n        imageElement.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            this.#handleImageSelection(imageElement);\r\n        });\r\n        \r\n        console.log(`✅ Temporal item created successfully:`, itemDiv);\r\n        return itemDiv;\r\n    }\r\n\r\n    #createDropdownItem(itemKey, itemData) {\r\n        console.log(`🔧 Creating dropdown item: ${itemKey}`, itemData);\r\n        \r\n        if (!itemData) {\r\n            console.error(`❌ Invalid dropdown item data for ${itemKey}:`, itemData);\r\n            return null;\r\n        }\r\n        \r\n        const itemDiv = document.createElement(\"div\");\r\n        itemDiv.className = \"ncop-item ncop-item-dropdown\";\r\n        // For dropdown, endpoint/key/attribute are at the dropdown object level, not inside children\r\n        const endpoint = itemData.endpoint || \"\";\r\n        const keyField = itemData.key || \"id\";\r\n        const attributeField = itemData.attribute || \"label\";\r\n        \r\n        console.log(`🔍 Dropdown config - endpoint: ${endpoint}, key: ${keyField}, attribute: ${attributeField}`);\r\n        \r\n        // Check if dropdown has an image\r\n        if (itemData.image) {\r\n            itemDiv.innerHTML = `\r\n                <div class=\"ncop-item-image\">\r\n                    <img src=\"${itemData.image}\" alt=\"${itemData.label || 'Dropdown'}\" />\r\n                </div>\r\n                <select class=\"ncop-dropdown\" data-endpoint=\"${endpoint}\" data-key-field=\"${keyField}\" data-attribute-field=\"${attributeField}\" data-item-key=\"${itemKey}\">\r\n                    <option selected>Loading...</option>\r\n                </select>\r\n            `;\r\n            // Add click handler for image selection\r\n            const imageElement = itemDiv.querySelector('.ncop-item-image');\r\n            imageElement.addEventListener('click', (event) => {\r\n                event.stopPropagation();\r\n                this.#handleImageSelection(imageElement);\r\n            });\r\n        } else {\r\n            itemDiv.innerHTML = `\r\n                <select class=\"ncop-dropdown\" data-endpoint=\"${endpoint}\" data-key-field=\"${keyField}\" data-attribute-field=\"${attributeField}\" data-item-key=\"${itemKey}\">\r\n                    <option selected>Loading...</option>\r\n                </select>\r\n            `;\r\n        }\r\n        \r\n        // Fetch and populate dropdown options asynchronously\r\n        setTimeout(() => {\r\n            const select = itemDiv.querySelector(\"select\");\r\n            if (!endpoint) {\r\n                console.warn(`⚠️ No endpoint provided for dropdown ${itemKey}`);\r\n                select.innerHTML = `<option selected disabled>No endpoint</option>`;\r\n                return;\r\n            }\r\n            \r\n            console.log(`📡 Fetching dropdown data from: ${endpoint}`);\r\n            fetch(endpoint)\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(`📊 Dropdown data for ${itemKey}:`, data);\r\n                    select.innerHTML = `<option selected disabled>Select an option</option>`;\r\n                    data.forEach((row) => {\r\n                        console.log(`🔍 Processing row:`, row);\r\n                        const value = row[keyField];\r\n                        const label = row[attributeField];\r\n                        console.log(`✅ Value: ${value}, Label: ${label}`);\r\n                        select.innerHTML += `<option value=\"${value}\">${label}</option>`;\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.error(`❌ Dropdown fetch error for ${itemKey}:`, err);\r\n                    select.innerHTML = `<option selected disabled>Error loading data</option>`;\r\n                });\r\n        }, 0);\r\n        \r\n        console.log(`✅ Dropdown item created successfully:`, itemDiv);        return itemDiv;\r\n    }\r\n\r\n    #createButtonItem(itemKey, itemData) {\r\n        console.log(`🔧 Creating button item: ${itemKey}`, itemData);\r\n        \r\n        if (!itemData || !itemData.label) {\r\n            console.error(`❌ Invalid button item data for ${itemKey}:`, itemData);\r\n            return null;\r\n        }\r\n        \r\n        const itemDiv = document.createElement(\"div\");\r\n        itemDiv.className = \"ncop-item ncop-item-button\";\r\n        \r\n        // Set CSS custom properties for colors\r\n        const buttonColor = itemData.color || \"#6366f1\";\r\n        const borderColor = itemData.outline || \"#4f46e5\";\r\n        itemDiv.style.setProperty('--button-color', buttonColor);\r\n        itemDiv.style.setProperty('--border-color', borderColor);\r\n        \r\n        // Create button with label on left and toggle on right\r\n        if (itemData.image) {\r\n            itemDiv.innerHTML = `\r\n                <div class=\"ncop-item-content\">\r\n                    <div class=\"ncop-item-image\">\r\n                        <img src=\"${itemData.image}\" alt=\"${itemData.label}\" />\r\n                    </div>\r\n                    <span class=\"ncop-item-label\">${itemData.label}</span>\r\n                </div>\r\n                <label class=\"ncop-toggle\">\r\n                    <input type=\"checkbox\" data-item-key=\"${itemKey}\">\r\n                    <span class=\"ncop-toggle-slider\"></span>\r\n                </label>\r\n            `;\r\n            // Add click handler for image selection\r\n            const imageElement = itemDiv.querySelector('.ncop-item-image');\r\n            imageElement.addEventListener('click', (event) => {\r\n                event.stopPropagation();\r\n                this.#handleImageSelection(imageElement);\r\n            });\r\n        } else {\r\n            itemDiv.innerHTML = `\r\n                <span class=\"ncop-item-label\">${itemData.label}</span>\r\n                <label class=\"ncop-toggle\">\r\n                    <input type=\"checkbox\" data-item-key=\"${itemKey}\">\r\n                    <span class=\"ncop-toggle-slider\"></span>\r\n                </label>\r\n            `;\r\n        }\r\n        \r\n        console.log(`✅ Button item created successfully:`, itemDiv);\r\n        return itemDiv;\r\n    }\r\n\r\n    #handleImageSelection(clickedImageElement) {\r\n        // Check if the clicked image is already selected\r\n        const isAlreadySelected = clickedImageElement.classList.contains('selected');\r\n        \r\n        // Remove selection from all images\r\n        document.querySelectorAll('.ncop-item-image.selected').forEach(image => {\r\n            image.classList.remove('selected');\r\n        });\r\n        \r\n        // If it wasn't already selected, select it\r\n        if (!isAlreadySelected) {\r\n            clickedImageElement.classList.add('selected');\r\n        }\r\n        \r\n        console.log(`🖼️ Image selection updated for:`, clickedImageElement);\r\n    }\r\n\r\n    #initializeAccordionHandlers() {\r\n        document.querySelectorAll(\".accordion-header\").forEach((header) => {\r\n            header.addEventListener(\"click\", function () {\r\n                const accordionContent = this.nextElementSibling;\r\n                const isActive = this.classList.contains(\"active\");\r\n\r\n                document\r\n                    .querySelectorAll(\".accordion-header\")\r\n                    .forEach((otherHeader) => {\r\n                        if (otherHeader !== this) {\r\n                            otherHeader.classList.remove(\"active\");\r\n                            otherHeader.nextElementSibling?.classList.remove(\"expanded\");\r\n                        }\r\n                    });\r\n\r\n                this.classList.toggle(\"active\", !isActive);\r\n                accordionContent?.classList.toggle(\"expanded\", !isActive);\r\n            });\r\n        });\r\n    }\r\n\r\n    #createBasicSidebar() {\r\n        if (!this.#accordionContainer) return;\r\n        this.#accordionContainer.innerHTML = `\r\n            <div class=\"accordion-item\">\r\n                <div class=\"accordion-header\">\r\n                    <i data-lucide=\"settings\"></i>\r\n                    <span>System Menu</span>\r\n                    <i data-lucide=\"chevron-down\" class=\"accordion-chevron\"></i>\r\n                </div>\r\n                <div class=\"accordion-content\">\r\n                    <ul class=\"accordion-items\">\r\n                        <li class=\"accordion-item-entry\" data-action=\"exportData\">\r\n                            <i data-lucide=\"download\"></i><span>Export Settings</span>\r\n                        </li>\r\n                        <li class=\"accordion-item-entry\" data-action=\"showHelp\">\r\n                            <i data-lucide=\"help-circle\"></i><span>Help & Support</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        `;\r\n        this.#initializeAccordionHandlers();\r\n        lucide.createIcons();\r\n    }\r\n\r\n    // --- NCOP Control Handlers ---\r\n\r\n    #handleNCOPToggle(endpoint, itemKey, isEnabled) {\r\n        console.log(`🔄 NCOP Toggle - ${itemKey}:`, {\r\n            endpoint: endpoint,\r\n            enabled: isEnabled,\r\n        });\r\n\r\n        if (this.#storage) {\r\n            this.#storage.saveSetting(`ncop_toggle_${itemKey}`, isEnabled);\r\n        }\r\n\r\n        const message = isEnabled ? \"enabled\" : \"disabled\";\r\n        console.log(`📡 ${itemKey} has been ${message}`);\r\n\r\n        // Placeholder for API/Map Layer logic\r\n    }\r\n\r\n    #handleNCOPDropdown(endpoint, itemKey, selectedValue) {\r\n        console.log(`📋 NCOP Dropdown - ${itemKey}:`, {\r\n            endpoint: endpoint,\r\n            value: selectedValue,\r\n        });\r\n\r\n        if (this.#storage) {\r\n            this.#storage.saveSetting(`ncop_dropdown_${itemKey}`, selectedValue);\r\n        }\r\n\r\n        if (selectedValue === \"\") {\r\n            console.log(`📋 ${itemKey} selection cleared`);\r\n            return;\r\n        }\r\n\r\n        console.log(`📊 ${itemKey} set to: ${selectedValue}`);\r\n\r\n        // Placeholder for API/Map Layer logic\r\n    }\r\n\r\n    #restoreNCOPStates() {\r\n        if (!this.#storage) return;\r\n\r\n        document\r\n            .querySelectorAll('.ncop-toggle input[type=\"checkbox\"]')\r\n            .forEach((toggle) => {\r\n                const itemKey = toggle.dataset.itemKey;\r\n                const savedState = this.#storage.getSetting(`ncop_toggle_${itemKey}`);\r\n                if (savedState !== null) {\r\n                    toggle.checked = savedState;\r\n                }\r\n            });\r\n\r\n        document.querySelectorAll(\".ncop-dropdown\").forEach((dropdown) => {\r\n            const itemKey = dropdown.dataset.itemKey;\r\n            const savedState = this.#storage.getSetting(`ncop_dropdown_${itemKey}`);\r\n            if (savedState !== null) {\r\n                dropdown.value = savedState;\r\n            }\r\n        });\r\n\r\n        console.log(\"🔄 NCOP control states restored from localStorage\");\r\n    }\r\n\r\n    // --- Search Functionality ---\r\n\r\n    #initializeSearchFunctionality() {\r\n        const searchInput = document.getElementById(\"sidebarSearch\");\r\n        const clearSearchBtn = document.getElementById(\"clearSearch\");\r\n\r\n        if (!searchInput || !clearSearchBtn) return;\r\n\r\n        searchInput.addEventListener(\"input\", (e) => {\r\n            const searchTerm = e.target.value.toLowerCase().trim();\r\n            if (searchTerm) {\r\n                clearSearchBtn.style.display = \"flex\";\r\n                this.#performSearch(searchTerm);\r\n            } else {\r\n                clearSearchBtn.style.display = \"none\";\r\n                this.#clearSearch();\r\n            }\r\n        });\r\n\r\n        clearSearchBtn.addEventListener(\"click\", () => {\r\n            searchInput.value = \"\";\r\n            clearSearchBtn.style.display = \"none\";\r\n            this.#clearSearch();\r\n        });\r\n    }\r\n\r\n    #performSearch(searchTerm) {\r\n        const accordionContainer = this.#accordionContainer;\r\n        if (!accordionContainer) return;\r\n\r\n        let visibleCount = 0;\r\n        const accordions = accordionContainer.querySelectorAll(\".accordion-item\");\r\n\r\n        accordions.forEach((accordion) => {\r\n            let accordionHasMatch = false;\r\n            const accordionHeader = accordion.querySelector(\".accordion-header\");\r\n            const accordionContent = accordion.querySelector(\".accordion-content\");\r\n            const accordionTitleElement = accordionHeader.querySelector(\"span\");\r\n            const accordionTitle =\r\n                accordionTitleElement?.textContent.toLowerCase() || \"\";\r\n            const accordionMatches = accordionTitle.includes(searchTerm);\r\n\r\n            if (accordionMatches) {\r\n                accordionHasMatch = true;\r\n            }\r\n\r\n            const subcategories = accordion.querySelectorAll(\".ncop-subcategory\");\r\n            let visibleSubcategories = 0;\r\n\r\n            subcategories.forEach((subcategory) => {\r\n                let subcategoryHasMatch = false;\r\n                const subcategoryHeader = subcategory.querySelector(\r\n                    \".ncop-subcategory-header\"\r\n                );\r\n                const subcategoryHeaderSpan = subcategoryHeader?.querySelector(\"span\");\r\n                const subcategoryTitle = subcategoryHeaderSpan\r\n                    ? subcategoryHeaderSpan.textContent.toLowerCase()\r\n                    : \"\";\r\n                const itemsContainer = subcategory.querySelector(\r\n                    \".ncop-items-container\"\r\n                );\r\n\r\n                if (subcategoryTitle.includes(searchTerm)) {\r\n                    subcategoryHasMatch = true;\r\n                    accordionHasMatch = true;\r\n                }\r\n\r\n                const items = subcategory.querySelectorAll(\".ncop-item\");\r\n                let visibleItems = 0;\r\n\r\n                items.forEach((item) => {\r\n                    const itemLabel = item.querySelector(\".ncop-item-label\");\r\n                    const itemText = itemLabel ? itemLabel.textContent.toLowerCase() : \"\";\r\n\r\n                    const toggleInput = item.querySelector('input[type=\"checkbox\"]');\r\n                    const dropdownSelect = item.querySelector(\"select\");\r\n\r\n                    const allItemText = [\r\n                        itemText,\r\n                        toggleInput ? toggleInput.dataset.endpoint || \"\" : \"\",\r\n                        dropdownSelect ? dropdownSelect.dataset.endpoint || \"\" : \"\",\r\n                        subcategoryTitle,\r\n                        accordionTitle,\r\n                    ]\r\n                        .join(\" \")\r\n                        .toLowerCase();\r\n\r\n                    if (allItemText.includes(searchTerm)) {\r\n                        item.style.display = \"flex\";\r\n                        visibleItems++;\r\n                        subcategoryHasMatch = true;\r\n                        accordionHasMatch = true;\r\n                        this.#highlightText(itemLabel, searchTerm);\r\n                    } else {\r\n                        item.style.display = \"none\";\r\n                        this.#removeHighlight(itemLabel);\r\n                    }\r\n                });\r\n\r\n                if (subcategoryHasMatch) {\r\n                    subcategory.style.display = \"block\";\r\n                    visibleSubcategories++;\r\n\r\n                    if (subcategoryTitle.includes(searchTerm)) {\r\n                        this.#highlightText(subcategoryHeaderSpan, searchTerm);\r\n                    } else {\r\n                        this.#removeHighlight(subcategoryHeaderSpan);\r\n                    }\r\n\r\n                    if (itemsContainer && subcategoryHeader && visibleItems > 0) {\r\n                        itemsContainer.classList.add(\"visible\");\r\n                        subcategoryHeader.classList.add(\"expanded\");\r\n                    }\r\n                } else {\r\n                    subcategory.style.display = \"none\";\r\n                    this.#removeHighlight(subcategoryHeaderSpan);\r\n                }\r\n            });\r\n\r\n            if (accordionHasMatch) {\r\n                accordion.style.display = \"block\";\r\n                visibleCount++;\r\n\r\n                if (accordionContent && visibleSubcategories > 0) {\r\n                    accordionContent.classList.add(\"expanded\");\r\n                    accordionHeader.classList.add(\"active\");\r\n                }\r\n\r\n                if (accordionMatches && accordionTitleElement) {\r\n                    this.#highlightText(accordionTitleElement, searchTerm);\r\n                } else if (accordionTitleElement) {\r\n                    this.#removeHighlight(accordionTitleElement);\r\n                }\r\n            } else {\r\n                accordion.style.display = \"none\";\r\n                if (accordionTitleElement) {\r\n                    this.#removeHighlight(accordionTitleElement);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (visibleCount === 0) {\r\n            this.#showNoResultsMessage();\r\n        } else {\r\n            this.#removeNoResultsMessage();\r\n        }\r\n    }\r\n\r\n    #clearSearch() {\r\n        const accordionContainer = this.#accordionContainer;\r\n        if (!accordionContainer) return;\r\n\r\n        accordionContainer\r\n            .querySelectorAll(\".accordion-item\")\r\n            .forEach((accordion) => {\r\n                accordion.style.display = \"block\";\r\n\r\n                const header = accordion.querySelector(\".accordion-header\");\r\n                const content = accordion.querySelector(\".accordion-content\");\r\n                const headerTitle = header.querySelector(\"span\");\r\n\r\n                this.#removeHighlight(headerTitle);\r\n\r\n                header.classList.remove(\"active\");\r\n                content.classList.remove(\"expanded\");\r\n\r\n                accordion\r\n                    .querySelectorAll(\".ncop-subcategory\")\r\n                    .forEach((subcategory) => {\r\n                        subcategory.style.display = \"block\";\r\n\r\n                        const subHeader = subcategory.querySelector(\r\n                            \".ncop-subcategory-header\"\r\n                        );\r\n                        const subHeaderTitle = subHeader?.querySelector(\"span\");\r\n                        const itemsContainer = subcategory.querySelector(\r\n                            \".ncop-items-container\"\r\n                        );\r\n\r\n                        this.#removeHighlight(subHeaderTitle);\r\n\r\n                        subHeader?.classList.remove(\"expanded\");\r\n                        itemsContainer?.classList.remove(\"visible\");\r\n\r\n                        subcategory.querySelectorAll(\".ncop-item\").forEach((item) => {\r\n                            item.style.display = \"flex\";\r\n                            const label = item.querySelector(\".ncop-item-label\");\r\n                            this.#removeHighlight(label);\r\n                        });\r\n                    });\r\n            });\r\n\r\n        this.#removeNoResultsMessage();\r\n    }\r\n\r\n    #highlightText(element, searchTerm) {\r\n        if (!element || !searchTerm) return;\r\n        this.#removeHighlight(element); // Ensure no prior highlights\r\n        const originalText = element.textContent;\r\n        const regex = new RegExp(`(${searchTerm})`, \"gi\");\r\n        const highlightedText = originalText.replace(\r\n            regex,\r\n            '<span class=\"search-highlight\">$1</span>'\r\n        );\r\n        element.innerHTML = highlightedText;\r\n    }\r\n\r\n    #removeHighlight(element) {\r\n        if (!element) return;\r\n        // Use a loop to handle nested structure if necessary\r\n        const highlightedElements = element.querySelectorAll(\".search-highlight\");\r\n        highlightedElements.forEach((highlighted) => {\r\n            const parent = highlighted.parentNode;\r\n            parent.replaceChild(\r\n                document.createTextNode(highlighted.textContent),\r\n                highlighted\r\n            );\r\n            parent.normalize();\r\n        });\r\n\r\n        // Also clean up the element itself if it was highlighted\r\n        if (element.classList.contains(\"search-highlight\")) {\r\n            const parent = element.parentNode;\r\n            parent.replaceChild(\r\n                document.createTextNode(element.textContent),\r\n                element\r\n            );\r\n            parent.normalize();\r\n        }\r\n    }\r\n\r\n    #showNoResultsMessage() {\r\n        this.#removeNoResultsMessage();\r\n        if (this.#accordionContainer) {\r\n            const noResultsDiv = document.createElement(\"div\");\r\n            noResultsDiv.className = \"no-results-message\";\r\n            noResultsDiv.innerHTML = `<p>No results found</p><small>Try different keywords or check spelling</small>`;\r\n            this.#accordionContainer.appendChild(noResultsDiv);\r\n            lucide.createIcons();\r\n        }\r\n    }\r\n\r\n    #removeNoResultsMessage() {\r\n        document.querySelector(\".no-results-message\")?.remove();\r\n    }\r\n}\r\n","// UtilityManager.js\r\n\r\n/**\r\n * Encapsulates global utility functions (export/import settings, storage info)\r\n * and handles keyboard shortcuts.\r\n */\r\nexport class UtilityManager {\r\n    #storage = window.ncop_storage;\r\n\r\n    constructor() {\r\n        this.#exposeGlobals();\r\n        this.#addKeyboardShortcuts();\r\n        this.#logInfo();\r\n    }\r\n\r\n    /**\r\n     * Exposes utility functions globally under window.ncop_utils.\r\n     */\r\n    #exposeGlobals() {\r\n        window.ncop_utils = {\r\n            exportSettings: this.exportSettings.bind(this),\r\n            importSettings: this.importSettings.bind(this),\r\n            clearAllData: this.clearAllData.bind(this),\r\n            showStorageInfo: this.showStorageInfo.bind(this),\r\n            resetToDefaults: this.resetToDefaults.bind(this),\r\n        };\r\n    }\r\n\r\n    #addKeyboardShortcuts() {\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if (e.ctrlKey && e.shiftKey) {\r\n                switch (e.key) {\r\n                    case \"E\": // Ctrl+Shift+E: Export settings\r\n                        e.preventDefault();\r\n                        this.exportSettings();\r\n                        break;\r\n                    case \"I\": // Ctrl+Shift+I: Import settings\r\n                        e.preventDefault();\r\n                        this.importSettings();\r\n                        break;\r\n                    case \"D\": // Ctrl+Shift+D: Show storage info\r\n                        e.preventDefault();\r\n                        this.showStorageInfo();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    #logInfo() {\r\n        console.log(\r\n            \"🔧 NCOP Utilities loaded. Available commands: (ncop_utils.[command])\"\r\n        );\r\n    }\r\n\r\n    // --- Core Utility Methods ---\r\n\r\n    exportSettings() {\r\n        if (this.#storage) {\r\n            const data = this.#storage.exportSettings();\r\n            const blob = new Blob([data], { type: \"application/json\" });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = `ncop-settings-${new Date().toISOString().split(\"T\")[0]\r\n                }.json`;\r\n            a.click();\r\n\r\n            URL.revokeObjectURL(url);\r\n            console.log(\"📥 Settings exported\");\r\n        }\r\n    }\r\n\r\n    importSettings() {\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.accept = \".json\";\r\n\r\n        input.onchange = (e) => {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    const jsonData = e.target.result;\r\n                    if (this.#storage && this.#storage.importSettings(jsonData)) {\r\n                        alert(\"Settings imported successfully! Please refresh the page.\");\r\n                    } else {\r\n                        alert(\"Failed to import settings. Please check the file format.\");\r\n                    }\r\n                };\r\n                reader.readAsText(file);\r\n            }\r\n        };\r\n        input.click();\r\n    }\r\n\r\n    clearAllData() {\r\n        if (\r\n            confirm(\r\n                \"Are you sure you want to clear all saved data? This cannot be undone.\"\r\n            )\r\n        ) {\r\n            if (this.#storage) {\r\n                this.#storage.clearUserData();\r\n                alert(\"All data cleared! Please refresh the page.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    showStorageInfo() {\r\n        if (this.#storage) {\r\n            const info = this.#storage.getStorageInfo();\r\n            console.table(info);\r\n\r\n            const message = `\r\nStorage Information:\r\n- Total Keys: ${info.totalKeys}\r\n- Total Size: ${info.sizeKB} KB\r\n- Max Size: ${info.maxSize}\r\n- User: ${window.USERNAME || \"Guest\"}\r\n            `;\r\n            alert(message);\r\n        }\r\n    }\r\n\r\n    resetToDefaults() {\r\n        if (\r\n            confirm(\r\n                \"Reset all settings to defaults? This will clear your preferences.\"\r\n            )\r\n        ) {\r\n            if (this.#storage) {\r\n                this.#storage.clearUserData();\r\n                this.#storage.initializeUserSettings();\r\n                alert(\"Settings reset to defaults! Please refresh the page.\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","// UserControl.js\r\n\r\n/**\r\n * Handles the top-right user control button and panel visibility.\r\n */\r\nexport class UserControl {\r\n    constructor() {\r\n        this.render();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    /**\r\n     * Renders the custom user button HTML.\r\n     */\r\n    render() {\r\n        const mapContainer = document.getElementById(\"map\");\r\n        const userContainer = document.createElement(\"div\");\r\n        userContainer.className = \"custom-user-control\";\r\n        userContainer.innerHTML = `\r\n            <button id=\"userToggle\" class=\"custom-user-btn\" title=\"User Info\">\r\n                <i data-lucide=\"user\"></i>\r\n            </button>\r\n        `;\r\n        mapContainer.appendChild(userContainer);\r\n        lucide.createIcons();\r\n    }\r\n\r\n    /**\r\n     * Adds event listeners for the user button and outside clicks.\r\n     */\r\n    addEventListeners() {\r\n        const userToggle = document.getElementById(\"userToggle\");\r\n        const userPanel = document.getElementById(\"userPanel\");\r\n\r\n        if (userToggle && userPanel) {\r\n            userToggle.addEventListener(\"click\", function () {\r\n                userPanel.classList.toggle(\"user-panel-visible\");\r\n            });\r\n\r\n            document.addEventListener(\"click\", function (event) {\r\n                if (\r\n                    !userPanel.contains(event.target) &&\r\n                    !userToggle.contains(event.target)\r\n                ) {\r\n                    userPanel.classList.remove(\"user-panel-visible\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"names":["$parcel$bundleURL","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$parcel$resolve","url","i","matches","stack","match","$parcel$distDir","URL","toString","then","$7lV8K","bundle","Promise","resolve","reject","concat","document","getElementsByTagName","some","script","src","preloadLink","createElement","href","rel","as","head","appendChild","async","type","onerror","e","error","TypeError","message","onload","remove","$55a6d16921f8ab25$var$cachedBundles","$55a6d16921f8ab25$var$cachedPreloads","$55a6d16921f8ab25$var$cachedPrefetches","loader","cache","$55a6d16921f8ab25$var$getCache","apply","arguments","catch","Object","assign","$116e8acf3ac025b3$export$2e2bcd8739ae039","storagePrefix","currentUser","defaultSettings","mapStyle","mapCenter","mapZoom","mapBearing","mapPitch","labelsEnabled","userPanelVisible","basemapPanelVisible","theme","autoSaveInterval","notifications","lastLogin","lastActivity","sessionData","window","USER_ID","initializeUserSettings","setupAutoSave","console","log","getUserKey","key","settings","getAllSettings","keys","length","saveAllSettings","saveSetting","value","storageKey","localStorage","setItem","JSON","stringify","timestamp","Date","now","user","getSetting","defaultValue","stored","getItem","parsed","parse","undefined","forEach","saveMapState","mapInstance","center","getCenter","zoom","getZoom","bearing","getBearing","pitch","getPitch","lng","lat","restoreMapState","jumpTo","saveMapStyle","style","getMapStyle","saveLabelsState","enabled","getLabelsState","saveUserPanelState","visible","getUserPanelState","saveBasemapPanelState","getBasemapPanelState","saveSessionData","getSessionData","updateLastActivity","updateLastLogin","getLastActivity","getLastLogin","setInterval","addEventListener","clearUserData","userPrefix","startsWith","slice","removeItem","exportSettings","version","importSettings","jsonData","importData","getStorageInfo","userKeys","filter","totalSize","totalKeys","sizeKB","toFixed","maxSize","isAvailable","test","$93b279f81ac42fb1$export$7628ccdac312035f","storageInstance","toggleMapLabels","getStyle","layers","layer","layout","setLayoutProperty","changeMapProjection","projectionName","setProjection","enableTerrain","DEM_SOURCE_ID","getSource","addSource","tileSize","maxzoom","warn","setTerrain","source","exaggeration","easeTo","duration","disableTerrain","setTimeout","removeSource","currentProjection","$cf14833de6bed0ba$export$8ca199cd78f9e948","mapControlsInstance","projectionPanelInstance","projectionPanel","render","addEventListeners","mapContainer","getElementById","navWrapper","className","innerHTML","lucide","createIcons","restoreToggle3DState","ncop_storage","bind","zoomIn","zoomOut","togglePanel","isCollapsed","navControlsContainer","classList","toggle","toggleIcon","querySelector","setAttribute","newTerrainState","targetCoords","flyTo","mapboxgl","Marker","color","setLngLat","addTo","essential","terrainEnabled","button","title","add","$97ec45a09dd8a7ab$export$38034015ec4bd60e","savedProjection","projections","name","desc","emoji","map","p","join","querySelectorAll","item","projection","dataset","updateActiveProjection","contains","event","projectionSwitchBtn","target","$2ac62d84556b3e7e$export$427bf972e54c0c5","basemapContainer","basemapToggle","basemapPanel","labelsToggle","basemapList","stopPropagation","userPanel","basemapItem","closest","newStyle","setStyle","once","observer","MutationObserver","mutations","mutation","attributeName","observe","attributes","$1af1a5229eb4a727$export$a9f2769ca96a3d36","renderButton","loadSidebarConfig","openSidebar","closeSidebar","ncop_menu_items","menuData","categoryKey","categoryData","categoryElement","categoryConfig","gis_layers","icon","customIcon","weather","flood","air_quality","replace","l","toUpperCase","sectionDiv","config","iconHtml","header","content","subcategoryKey","subcategoryData","subcategoryDiv","subcategoryHeader","itemsContainer","typeKey","items","itemKey","toggleElement","grid","temporalElement","dropdownElement","buttonElement","isExpanded","parentContent","otherHeaders","nextElementSibling","itemData","label","itemDiv","image","imageElement","endpoint","keyField","attributeField","attribute","select","fetch","res","json","data","row","buttonColor","borderColor","outline","setProperty","clickedImageElement","isAlreadySelected","accordionContent","isActive","otherHeader","isEnabled","selectedValue","savedState","checked","dropdown","searchInput","clearSearchBtn","searchTerm","toLowerCase","trim","display","accordionContainer","visibleCount","accordions","accordion","accordionHasMatch","accordionHeader","accordionTitleElement","accordionTitle","textContent","accordionMatches","includes","subcategories","visibleSubcategories","subcategory","subcategoryHasMatch","subcategoryHeaderSpan","subcategoryTitle","visibleItems","itemLabel","itemText","toggleInput","dropdownSelect","allItemText","headerTitle","subHeader","subHeaderTitle","element","originalText","regex","RegExp","highlightedElements","highlighted","parent","parentNode","replaceChild","createTextNode","normalize","noResultsDiv","$52486f377b0af9fc$export$84786580e9446296","ncop_utils","clearAllData","showStorageInfo","resetToDefaults","ctrlKey","shiftKey","preventDefault","blob","Blob","createObjectURL","a","download","toISOString","split","click","revokeObjectURL","input","accept","onchange","file","files","reader","FileReader","result","alert","readAsText","confirm","info","table","USERNAME","$fafc3ae00a65de84$export$c03fb10402b1630c","userContainer","userToggle","$ec50055d448bfcd5$var$DashboardManager","MAPBOX_ACCESS_TOKEN","accessToken","on","savedStyle","savedCenter","savedZoom","Map","container","hash","savedBearing","savedPitch","savedTerrain","setBearing","setPitch"],"version":3,"file":"dashboard.js.map"}